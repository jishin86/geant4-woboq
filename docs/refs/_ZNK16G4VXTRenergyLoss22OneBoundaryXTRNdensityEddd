<dec f='codebrowser/source/processes/electromagnetic/xrays/include/G4VXTRenergyLoss.hh' l='120' type='G4double G4VXTRenergyLoss::OneBoundaryXTRNdensity(G4double energy, G4double gamma, G4double varAngle) const'/>
<doc f='codebrowser/source/processes/electromagnetic/xrays/include/G4VXTRenergyLoss.hh' l='118'>/////////////////////////////////////////////////////////////</doc>
<def f='codebrowser/source/processes/electromagnetic/xrays/src/G4VXTRenergyLoss.cc' l='1371' ll='1387' type='G4double G4VXTRenergyLoss::OneBoundaryXTRNdensity(G4double energy, G4double gamma, G4double varAngle) const'/>
<use f='codebrowser/source/processes/electromagnetic/xrays/src/G4VXTRenergyLoss.cc' l='1404' u='c' c='_ZN16G4VXTRenergyLoss24XTRNSpectralAngleDensityEd'/>
<use f='codebrowser/source/processes/electromagnetic/xrays/src/G4VXTRenergyLoss.cc' l='1429' u='c' c='_ZN16G4VXTRenergyLoss24XTRNAngleSpectralDensityEd'/>
<doc f='codebrowser/source/processes/electromagnetic/xrays/src/G4VXTRenergyLoss.cc' l='1361'>///////////////////////////////////////////////////////////////////////
//
// This function returns the spectral and angle density of TR quanta
// in X-ray energy region generated forward when a relativistic
// charged particle crosses interface between two materials.
// The high energy small theta approximation is applied.
// (matter1 -&gt; matter2, or 2-&gt;1)
// varAngle =2* (1 - std::cos(theta)) or approximately = theta*theta
//</doc>
