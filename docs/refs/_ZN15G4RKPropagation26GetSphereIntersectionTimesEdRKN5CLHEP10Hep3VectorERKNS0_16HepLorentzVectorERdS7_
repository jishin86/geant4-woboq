<dec f='codebrowser/source/processes/hadronic/models/binary_cascade/include/G4RKPropagation.hh' l='69' type='G4bool G4RKPropagation::GetSphereIntersectionTimes(const G4double radius, const G4ThreeVector &amp; currentPos, const G4LorentzVector &amp; momentum, G4double &amp; t1, G4double &amp; t2)'/>
<def f='codebrowser/source/processes/hadronic/models/binary_cascade/src/G4RKPropagation.cc' l='584' ll='603' type='G4bool G4RKPropagation::GetSphereIntersectionTimes(const G4double radius, const G4ThreeVector &amp; currentPos, const G4LorentzVector &amp; momentum, G4double &amp; t1, G4double &amp; t2)'/>
<doc f='codebrowser/source/processes/hadronic/models/binary_cascade/src/G4RKPropagation.cc' l='562'>/*
G4bool G4RKPropagation::WillBeCaptured(const G4KineticTrack * kt)
{
  G4double radius = theOuterRadius;

// evaluate the final energy. Il will be captured if newE or newP &lt; 0
  G4ParticleDefinition * definition = kt-&gt;GetDefinition();
  G4double mass = definition-&gt;GetPDGMass();
  G4ThreeVector pos = kt-&gt;GetPosition();
  G4LorentzVector mom = kt-&gt;GetTrackingMomentum();
  G4VNuclearField * field = (*theFieldMap)[definition-&gt;GetPDGEncoding()];
  G4ThreeVector newPos(0, 0, radius); // to get the field on the surface

  G4double newE = mom.e()+field-&gt;GetField(pos)-field-&gt;GetField(newPos);

  return ((newE &lt; mass) ? false : true);
}
 */



//----------------------------------------------------------------------------</doc>
