<def f='codebrowser/source/analysis/g4tools/include/tools/sg/group' l='152' ll='170' type='void * tools::sg::group::rsearch_from(const tools::sg::node * a_node, const int &amp; a_class, bool a_inc_a_node = true) const'/>
<doc f='codebrowser/source/analysis/g4tools/include/tools/sg/group' l='136'>/*
  template &lt;class T&gt;
  T* rsearch_from(const node* a_node) const {
    bool found = false;
    tools_vforcrit(node*,m_children,it) {
      // the below logic permits to test a_node.
      if(!found) {if(*it==a_node) found = true;}
      if(found) {
        T* o = safe_cast&lt;node,T&gt;(*(*it));
        if(o) return o;
      }
    }
    return 0;
  }
*/</doc>
