<dec f='codebrowser/source/geometry/navigation/include/G4SafetyHelper.hh' l='77' type='void G4SafetyHelper::Locate(const G4ThreeVector &amp; pGlobalPoint, const G4ThreeVector &amp; direction)'/>
<doc f='codebrowser/source/geometry/navigation/include/G4SafetyHelper.hh' l='70'>//
     // Return safety for all geometries.
     //
     //  The 2nd argument is the radius of your interest (e.g. maximum displacement )
     //    Giving this you can reduce the average computational cost.
     //  If the second argument is not given, this is the real isotropic safety</doc>
<def f='codebrowser/source/geometry/navigation/src/G4SafetyHelper.cc' l='188' ll='200' type='void G4SafetyHelper::Locate(const G4ThreeVector &amp; newPosition, const G4ThreeVector &amp; newDirection)'/>
