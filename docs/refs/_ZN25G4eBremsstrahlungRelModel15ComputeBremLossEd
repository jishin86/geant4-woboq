<dec f='codebrowser/source/processes/electromagnetic/standard/include/G4eBremsstrahlungRelModel.hh' l='108' type='G4double G4eBremsstrahlungRelModel::ComputeBremLoss(G4double cutEnergy)'/>
<def f='codebrowser/source/processes/electromagnetic/standard/src/G4eBremsstrahlungRelModel.cc' l='295' ll='321' type='G4double G4eBremsstrahlungRelModel::ComputeBremLoss(G4double tmax)'/>
<doc f='codebrowser/source/processes/electromagnetic/standard/src/G4eBremsstrahlungRelModel.cc' l='278'>// Computes the integral part of the restricted dE/dx contribution from a given
// element (Z) by numerically integrating the k dependent part of the DCS between
// k_min=0 and k_max = tmax = min[gamma-cut, electron-kinetic-eenrgy].
// The numerical integration is done by dividing the integration range into &apos;n&apos;
// subintervals and an 8 pint GL integral (on [0,1]) is performed on each sub-
// inteval by tranforming k to alpha=k/E_t (E_t is the total energy of the e-)
// and each sub-interavl is transformed to [0,1]. So the integrastion is done
// in xi(alpha) = xi(k) = [k/E_t-alpha_i]/delta where alpha_i=(i-1)*delta for
// the i = 1,2,..,n-th sub-interval so xi(k) in [0,1] on each sub-intevals.
// This transformation from &apos;k&apos; to &apos;xi(k)&apos; results in a multiplicative factor
// of E_t*delta at each step.
// The restricted dE/dx = N int_{0}^{k_max} k*ds/dk dk. There are 2 DCS model
// one with LPM and one without LPM effects (see them below). In both case not
// the ds/dk(Z,k) but ds/dk(Z,k)*[F*k/C] is computed since:
// (i)    what we need here is ds/dk*k and not k so this multiplication is done
// (ii)   the Ter-Mikaelian suppression i.e. F related factor is done here
// (iii)  the constant factor C (includes Z^2 as well)is accounted in the caller</doc>
