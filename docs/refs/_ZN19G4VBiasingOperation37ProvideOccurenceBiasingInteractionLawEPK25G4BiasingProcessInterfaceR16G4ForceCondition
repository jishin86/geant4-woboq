<dec f='codebrowser/source/processes/biasing/management/include/G4VBiasingOperation.hh' l='121' type='const G4VBiasingInteractionLaw * G4VBiasingOperation::ProvideOccurenceBiasingInteractionLaw(const G4BiasingProcessInterface * , G4ForceCondition &amp; )'/>
<ovr f='codebrowser/source/processes/biasing/generic/src/G4BOptnChangeCrossSection.cc' l='43' c='_ZN25G4BOptnChangeCrossSection37ProvideOccurenceBiasingInteractionLawEPK25G4BiasingProcessInterfaceR16G4ForceCondition'/>
<doc f='codebrowser/source/processes/biasing/management/include/G4VBiasingOperation.hh' l='91'>// -----------------------------
  // -- Interface to sub-classes :
  // -----------------------------
  // --
  // *************************************
  // ** Methods for physics-based biasing:
  // *************************************
  // --
  // ---- I. Biasing of the process occurrence:
  // -----------------------------------------
  // ---- The biasing of the process occurrence regards the occurrence of the PostStepDoIt
  // ---- behavior. But the weight is manipulated by both AlongStep methods (weight for
  // ---- non-interaction) and PostStep methods (weight for interaction). For this
  // ---- reason, occurrence biasing is handled by both AlongStep and PostStep methods.
  // ----
  // ---- If the operation is returned to the G4BiasingProcessInterface process by the
  // ---- ProposeOccurenceBiasingOperation(...)/GetProposedOccurenceBiasingOperation(...) method
  // ---- of the biasing operator, all methods below will be called for this operation.
  // ----
  // ---- I.1) Methods called in at the PostStepGetPhysicalInteractionLength(...) level :
  // ---- 
  // ------ o Main and mandatory method for biasing of the PostStep process biasing occurrence :
  // ------   - propose an interaction law to be substituted to the process that is biased
  // ------   - the operation is told which is the G4BiasingProcessInterface calling it with
  // ------     callingProcess argument.
  // ------   - the returned law will have to have been sampled prior to be returned as it will be
  // ------     asked for its GetSampledInteractionLength() by the callingProcess.
  // ------   - the operation can propose a force condition in the PostStepGPIL (the passed value
  // ------     to the operation is the one of the wrapped process, if proposeForceCondition is
  // ------     unchanged, this same value will be used as the biasing foroce condition)</doc>
<doc f='codebrowser/source/processes/biasing/management/include/G4VBiasingOperation.hh' l='121'>/* callingProcess */</doc>
<ovr f='codebrowser/source/processes/biasing/generic/include/G4BOptnCloning.hh' l='58' c='_ZN14G4BOptnCloning37ProvideOccurenceBiasingInteractionLawEPK25G4BiasingProcessInterfaceR16G4ForceCondition'/>
<ovr f='codebrowser/source/processes/biasing/generic/src/G4BOptnForceCommonTruncatedExp.cc' l='54' c='_ZN30G4BOptnForceCommonTruncatedExp37ProvideOccurenceBiasingInteractionLawEPK25G4BiasingProcessInterfaceR16G4ForceCondition'/>
<ovr f='codebrowser/source/processes/biasing/generic/src/G4BOptnForceFreeFlight.cc' l='47' c='_ZN22G4BOptnForceFreeFlight37ProvideOccurenceBiasingInteractionLawEPK25G4BiasingProcessInterfaceR16G4ForceCondition'/>
<use f='codebrowser/source/processes/biasing/generic/src/G4BiasingProcessInterface.cc' l='435' u='c' c='_ZN25G4BiasingProcessInterface36PostStepGetPhysicalInteractionLengthERK7G4TrackdP16G4ForceCondition'/>
