<dec f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/include/G4INCLCoulombNonRelativistic.hh' l='140' type='G4bool G4INCL::CoulombNonRelativistic::coulombDeviation(G4INCL::Particle *const p, const G4INCL::Nucleus *const n) const'/>
<doc f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/include/G4INCLCoulombNonRelativistic.hh' l='114'>/** \brief Perform Coulomb deviation
       *
       * Modifies the entrance angle of the particle and its impact parameter.
       * Can be applied to Particles and Clusters.
       *
       * The trajectory for an asymptotic impact parameter \f$b\f$ is
       * parametrised as follows:
       * \f[
       * r(\theta) = \frac{(1-e^2)r_0/2}{1-e \sin(\theta-\theta_R/2)},
       * \f]
       * here \f$e\f$ is the hyperbola eccentricity:
       * \f[
       * e = \sqrt{1+4b^2/r_0^2};
       * \f]
       * \f$\theta_R\f$ is the Rutherford scattering angle:
       * \f[
       * \theta_R = \pi - 2\arctan\left(\frac{2b}{r_0}\right)
       * \f]
       * \f$\theta\f$ ranges from \f$\pi\f$ (initial state) to \f$\theta_R\f$
       * (scattered particle) and \f$r_0\f$ is the minimum distance of approach
       * in a head-on collision (see the minimumDistance() method).
       *
       * \param p pointer to the Particle
       * \param n pointer to the Nucleus
       * \return false if below the barrier
       */</doc>
<use f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/src/G4INCLCoulombNonRelativistic.cc' l='53' u='c' c='_ZNK6G4INCL22CoulombNonRelativistic14bringToSurfaceEPNS_8ParticleEPNS_7NucleusE'/>
<use f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/src/G4INCLCoulombNonRelativistic.cc' l='68' u='c' c='_ZNK6G4INCL22CoulombNonRelativistic14bringToSurfaceEPNS_7ClusterEPNS_7NucleusE'/>
<def f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/src/G4INCLCoulombNonRelativistic.cc' l='137' ll='194' type='G4bool G4INCL::CoulombNonRelativistic::coulombDeviation(G4INCL::Particle *const p, const G4INCL::Nucleus *const n) const'/>
