<dec f='codebrowser/source/event/include/G4UserStackingAction.hh' l='110' type='void G4UserStackingAction::PrepareNewEvent()'/>
<doc f='codebrowser/source/event/include/G4UserStackingAction.hh' l='84'>//
//    This method is called by G4StackManager when the urgentStack
//  becomes empty and contents in the waitingStack are transtered
//  to the urgentStack.
//    Note that this method is not called at the begining of each
//  event, but &quot;PrepareNewEvent&quot; is called.
//
//    In case re-classification of the stacked tracks is needed,
//  use the following method to request to G4StackManager.
//
//    stackManager-&gt;ReClassify();
//
//  All of the stacked tracks in the waitingStack will be re-classified 
//  by &quot;ClassifyNewTrack&quot; method.
//    To abort current event, use the following method.
//
//    stackManager-&gt;clear();
//
//  Note that this way is valid and safe only for the case it is called
//  from this user class. The more global way of event abortion is
//
//    G4UImanager * UImanager = G4UImanager::GetUIpointer();
//    UImanager-&gt;ApplyCommand(&quot;/event/abort&quot;);
//
//---------------------------------------------------------------
//</doc>
<ovr f='codebrowser/source/event/src/G4AdjointStackingAction.cc' l='86' c='_ZN23G4AdjointStackingAction15PrepareNewEventEv'/>
<use f='codebrowser/source/event/src/G4AdjointStackingAction.cc' l='89' u='c' c='_ZN23G4AdjointStackingAction15PrepareNewEventEv'/>
<ovr f='codebrowser/source/event/include/G4StackChecker.hh' l='55' c='_ZN14G4StackChecker15PrepareNewEventEv'/>
<use f='codebrowser/source/event/src/G4StackManager.cc' l='263' u='c' c='_ZN14G4StackManager15PrepareNewEventEv'/>
<def f='codebrowser/source/event/src/G4UserStackingAction.cc' l='65' ll='66' type='void G4UserStackingAction::PrepareNewEvent()'/>
