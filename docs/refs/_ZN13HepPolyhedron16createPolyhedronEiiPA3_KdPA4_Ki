<dec f='codebrowser/source/graphics_reps/include/HepPolyhedron.h' l='365' type='G4int HepPolyhedron::createPolyhedron(G4int Nnodes, G4int Nfaces, const G4double (*)[3] xyz, const G4int (*)[4] faces)'/>
<doc f='codebrowser/source/graphics_reps/include/HepPolyhedron.h' l='348'>/**
   * Creates user defined polyhedron.
   * This function allows to the user to define arbitrary polyhedron.
   * The faces of the polyhedron should be either triangles or planar
   * quadrilateral. Nodes of a face are defined by indexes pointing to
   * the elements in the xyz array. Numeration of the elements in the
   * array starts from 1 (like in fortran). The indexes can be positive
   * or negative. Negative sign means that the corresponding edge is
   * invisible. The normal of the face should be directed to exterior
   * of the polyhedron. 
   * 
   * @param  Nnodes number of nodes
   * @param  Nfaces number of faces
   * @param  xyz    nodes
   * @param  faces  faces (quadrilaterals or triangles)
   * @return status of the operation - is non-zero in case of problem
   */</doc>
<use f='codebrowser/source/geometry/solids/CSG/src/G4CutTubs.cc' l='1957' u='c' c='_ZNK9G4CutTubs16CreatePolyhedronEv'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4GenericPolycone.cc' l='930' u='c' c='_ZNK17G4GenericPolycone16CreatePolyhedronEv'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4Polyhedra.cc' l='1348' u='c' c='_ZNK11G4Polyhedra16CreatePolyhedronEv'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4Tet.cc' l='799' u='c' c='_ZNK5G4Tet16CreatePolyhedronEv'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4TwistedTubs.cc' l='930' u='c' c='_ZNK13G4TwistedTubs16CreatePolyhedronEv'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4VTwistedFaceted.cc' l='1174' u='c' c='_ZNK17G4VTwistedFaceted16CreatePolyhedronEv'/>
<def f='codebrowser/source/graphics_reps/src/HepPolyhedron.cc' l='1369' ll='1398' type='G4int HepPolyhedron::createPolyhedron(G4int Nnodes, G4int Nfaces, const G4double (*)[3] xyz, const G4int (*)[4] faces)'/>
