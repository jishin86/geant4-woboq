<dec f='codebrowser/source/geometry/solids/specific/include/G4PolyPhiFace.hh' l='158' type='G4double G4PolyPhiFace::ExactZOrder(G4double z, G4double qx, G4double qy, G4double qz, const G4ThreeVector &amp; v, G4double normSign, const G4PolyPhiFaceVertex * vert) const'/>
<def f='codebrowser/source/geometry/solids/specific/include/G4PolyPhiFace.icc' l='55' ll='74' type='G4double G4PolyPhiFace::ExactZOrder(G4double z, G4double qx, G4double qy, G4double qz, const G4ThreeVector &amp; v, G4double normSign, const G4PolyPhiFaceVertex * vert) const'/>
<doc f='codebrowser/source/geometry/solids/specific/include/G4PolyPhiFace.hh' l='156'>// Decide if the point in r,z is inside the edges of our face.</doc>
<doc f='codebrowser/source/geometry/solids/specific/include/G4PolyPhiFace.icc' l='43'>// ExactZOrder
//
// Decide precisely whether a trajectory passes to the left, right, or exactly 
// passes through the z position of a vertex point in our face.
//
// Result is only determined within an arbitrary (positive) factor.
//      &gt; 0 to the right
//      &lt; 0 to the left
//      = 0 exactly on top of
// In 99.9999% of the cases, a trivial calculation is used. In difficult
// cases, a precise, compliant calculation is relied on.
//</doc>
<use f='codebrowser/source/geometry/solids/specific/src/G4PolyPhiFace.cc' l='709' u='c' c='_ZN13G4PolyPhiFace16InsideEdgesExactEdddRKN5CLHEP10Hep3VectorES3_'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4PolyPhiFace.cc' l='715' u='c' c='_ZN13G4PolyPhiFace16InsideEdgesExactEdddRKN5CLHEP10Hep3VectorES3_'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4PolyPhiFace.cc' l='749' u='c' c='_ZN13G4PolyPhiFace16InsideEdgesExactEdddRKN5CLHEP10Hep3VectorES3_'/>
