<dec f='codebrowser/source/processes/hadronic/models/particle_hp/include/G4ParticleHPInelasticData.hh' l='81' type='void G4ParticleHPInelasticData::BuildPhysicsTable(const G4ParticleDefinition &amp; )'/>
<doc f='codebrowser/source/processes/hadronic/models/particle_hp/include/G4ParticleHPInelasticData.hh' l='80'>//void BuildPhysicsTableHP(G4ParticleDefinition* projectile, const char* dataDirVariable); // name it &apos;HP&apos; to avoid compilation warning because of G4VCrossSectionDataSet&apos;s method</doc>
<inh f='codebrowser/source/processes/hadronic/cross_sections/include/G4VCrossSectionDataSet.hh' l='136' c='_ZN22G4VCrossSectionDataSet17BuildPhysicsTableERK20G4ParticleDefinition'/>
<def f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPInelasticData.cc' l='164' ll='211' type='void G4ParticleHPInelasticData::BuildPhysicsTable(const G4ParticleDefinition &amp; projectile)'/>
<doc f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPInelasticData.cc' l='153'>/*
G4bool G4ParticleHPInelasticData::IsApplicable(const G4DynamicParticle*aP, const G4Element*)
{
  G4bool result = true;
  G4double eKin = aP-&gt;GetKineticEnergy();
  if(eKin&gt;20*MeV||aP-&gt;GetDefinition()!=G4Neutron::Neutron()) result = false;
  return result;
}
*/

//void G4ParticleHPInelasticData::BuildPhysicsTableHP(G4ParticleDefinition* projectile,const char* /* dataDirVariable */)</doc>
