<dec f='codebrowser/source/processes/biasing/importance/include/G4GeometrySampler.hh' l='62' type='void G4GeometrySampler::PrepareImportanceSampling(G4VIStore * istore, const G4VImportanceAlgorithm * ialg)'/>
<doc f='codebrowser/source/processes/biasing/importance/include/G4GeometrySampler.hh' l='61'>//  virtual void PrepareScoring(G4VScorer *Scorer);</doc>
<inh f='codebrowser/source/processes/biasing/importance/include/G4VSampler.hh' l='64' c='_ZN10G4VSampler25PrepareImportanceSamplingEP9G4VIStorePK22G4VImportanceAlgorithm'/>
<def f='codebrowser/source/processes/biasing/importance/src/G4GeometrySampler.cc' l='158' ll='177' type='void G4GeometrySampler::PrepareImportanceSampling(G4VIStore * istore, const G4VImportanceAlgorithm * ialg)'/>
<doc f='codebrowser/source/processes/biasing/importance/src/G4GeometrySampler.cc' l='138'>// void G4GeometrySampler::PrepareScoring(G4VScorer *scorer)
// {
//   G4cout &lt;&lt; &quot; preparing scoring configurator &quot; &lt;&lt; G4endl;
//   G4cout &lt;&lt; G4endl;
//   G4cout &lt;&lt; G4endl;
//   G4cout &lt;&lt; G4endl;
//   G4cout &lt;&lt; &quot; new fWorld Name: &quot; &lt;&lt; fWorld-&gt;GetName() &lt;&lt; G4endl;
//   G4cout &lt;&lt; G4endl;
//   G4cout &lt;&lt; G4endl;
//   G4cout &lt;&lt; G4endl;
//   fScoreConfigurator = new G4ScoreConfigurator(fWorld, fParticleName, *scorer, paraflag);
//   G4cout &lt;&lt; &quot; configured scoring &quot; &lt;&lt; G4endl;
//   if (!fScoreConfigurator)
//   {
//     G4Exception(&quot;G4GeometrySampler::PrepareScoring()&quot;,
//                 &quot;FatalError&quot;, FatalException,
//                 &quot;Failed allocation of G4ScoreConfigurator !&quot;);
//   }
// }</doc>
