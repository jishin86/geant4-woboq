<dec f='codebrowser/source/geometry/navigation/include/G4MultiLevelLocator.hh' l='59' type='G4bool G4MultiLevelLocator::EstimateIntersectionPoint(const G4FieldTrack &amp; curveStartPointTangent, const G4FieldTrack &amp; curveEndPointTangent, const G4ThreeVector &amp; trialPoint, G4FieldTrack &amp; intersectPointTangent, G4bool &amp; recalculatedEndPoint, G4double &amp; fPreviousSafety, G4ThreeVector &amp; fPreviousSftOrigin)'/>
<inh f='codebrowser/source/geometry/navigation/include/G4VIntersectionLocator.hh' l='64' c='_ZN22G4VIntersectionLocator25EstimateIntersectionPointERK12G4FieldTrackS2_RKN5CLHEP10Hep3VectorERS0_RbRdRS4_'/>
<def f='codebrowser/source/geometry/navigation/src/G4MultiLevelLocator.cc' l='118' ll='834' type='G4bool G4MultiLevelLocator::EstimateIntersectionPoint(const G4FieldTrack &amp; CurveStartPointVelocity, const G4FieldTrack &amp; CurveEndPointVelocity, const G4ThreeVector &amp; TrialPoint, G4FieldTrack &amp; IntersectedOrRecalculatedFT, G4bool &amp; recalculatedEndPoint, G4double &amp; previousSafety, G4ThreeVector &amp; previousSftOrigin)'/>
<doc f='codebrowser/source/geometry/navigation/src/G4MultiLevelLocator.cc' l='76'>// --------------------------------------------------------------------------
// G4bool G4PropagatorInField::LocateIntersectionPoint( 
//        const G4FieldTrack&amp;       CurveStartPointVelocity,   // A
//        const G4FieldTrack&amp;       CurveEndPointVelocity,     // B
//        const G4ThreeVector&amp;      TrialPoint,                // E
//              G4FieldTrack&amp;       IntersectedOrRecalculated  // Output
//              G4bool&amp;             recalculated )             // Out
// --------------------------------------------------------------------------
//
// Function that returns the intersection of the true path with the surface
// of the current volume (either the external one or the inner one with one
// of the daughters:
//
//     A = Initial point
//     B = another point 
//
// Both A and B are assumed to be on the true path:
//
//     E is the first point of intersection of the chord AB with 
//     a volume other than A  (on the surface of A or of a daughter)
//
// Convention of Use :
//     i) If it returns &quot;true&quot;, then IntersectionPointVelocity is set
//       to the approximate intersection point.
//    ii) If it returns &quot;false&quot;, no intersection was found.
//        Potential reasons:
//        a) no segment found an intersection
//        b) too many steps were required - after that it abandoned the effort
//           and is returning how far it could go.  (New - 29 Oct 2015)
//           (If so, it must set &apos;recalculated&apos; to true.) 
//        TODO/idea: add a new flag: &apos;unfinished&apos; to identify these cases.
//
//        IntersectedOrRecalculated means different things:
//        a) if it is the same curve lenght along, it is a revision of the
//            original enpdoint due to the need for re-integration.
//        b) if it is at a shorter curve length, it is &apos;end of what it could do&apos;
//           i.e. as far as it could go, because it took too many steps!
//        Note: IntersectedOrRecalculated is valid only if &apos;recalculated&apos; is
//       &apos;true&apos;.
// --------------------------------------------------------------------------
// NOTE: implementation taken from G4PropagatorInField
//</doc>
<doc f='codebrowser/source/geometry/navigation/include/G4MultiLevelLocator.hh' l='57'>// Default destructor</doc>
