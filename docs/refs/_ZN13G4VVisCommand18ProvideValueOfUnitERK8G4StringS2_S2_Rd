<dec f='codebrowser/source/visualization/management/include/G4VVisCommand.hh' l='89' type='G4bool G4VVisCommand::ProvideValueOfUnit(const G4String &amp; where, const G4String &amp; unit, const G4String &amp; category, G4double &amp; value)'/>
<doc f='codebrowser/source/visualization/management/include/G4VVisCommand.hh' l='80'>// Note: colour is supplied by the caller and becomes the default if the
  // remaining parameters cannot be parsed.
  // Note: redOrString is either a number or string.  If a string it must be
  // one of the recognised colours.
  // Thus the arguments can be, for example:
  // (colour,&quot;red&quot;,...,...,0.5): will give the colour red with opacity 0.5 (the
  // third and fourth arguments are ignored), or
  // (1.,0.,0.,0.5): this also will be red with opacity 0.5.</doc>
<def f='codebrowser/source/visualization/management/src/G4VVisCommand.cc' l='158' ll='188' type='G4bool G4VVisCommand::ProvideValueOfUnit(const G4String &amp; where, const G4String &amp; unit, const G4String &amp; category, G4double &amp; value)'/>
<use f='codebrowser/source/visualization/management/src/G4VisCommandsViewer.cc' l='645' u='c' c='_ZN33G4VisCommandViewerColourByDensity11SetNewValueEP11G4UIcommand8G4String'/>
<use f='codebrowser/source/visualization/management/src/G4VisCommandsViewerSet.cc' l='797' u='c' c='_ZN22G4VisCommandsViewerSet11SetNewValueEP11G4UIcommand8G4String'/>
