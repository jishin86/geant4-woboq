<dec f='codebrowser/source/processes/electromagnetic/polarisation/include/G4PolarizedComptonCrossSection.hh' l='69' type='void G4PolarizedComptonCrossSection::Initialize(G4double eps, G4double X, G4double phi, const G4StokesVector &amp; p0, const G4StokesVector &amp; p1, G4int flag = 0)'/>
<inh f='codebrowser/source/processes/electromagnetic/polarisation/include/G4VPolarizedCrossSection.hh' l='56' c='_ZN24G4VPolarizedCrossSection10InitializeEdddRK14G4StokesVectorS2_i'/>
<def f='codebrowser/source/processes/electromagnetic/polarisation/src/G4PolarizedComptonCrossSection.cc' l='73' ll='156' type='void G4PolarizedComptonCrossSection::Initialize(G4double eps, G4double X, G4double , const G4StokesVector &amp; pol0, const G4StokesVector &amp; pol1, G4int flag = 0)'/>
<doc f='codebrowser/source/processes/electromagnetic/polarisation/src/G4PolarizedComptonCrossSection.cc' l='72'>//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</doc>
<doc f='codebrowser/source/processes/electromagnetic/polarisation/src/G4PolarizedComptonCrossSection.cc' l='73'>// phi</doc>
<doc f='codebrowser/source/processes/electromagnetic/polarisation/include/G4PolarizedComptonCrossSection.hh' l='62'>// prepares the ingredients for the calculation of a polarization 
  // dependent differential cross section
  // the kinematics is fixed (X - incoming photon energy in units of electron mass, 
  //  eps - outgoing photon energy in unit of incoming photon energy, 
  // and polarization of the incoming particles fixed (p0, p1)
  // a flag specifies the extent to which polarization is taken 
  // into account</doc>
