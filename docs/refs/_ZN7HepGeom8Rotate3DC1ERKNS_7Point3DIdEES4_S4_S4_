<dec f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='408' type='void HepGeom::Rotate3D::Rotate3D(const Point3D&lt;double&gt; &amp; fr1, const Point3D&lt;double&gt; &amp; fr2, const Point3D&lt;double&gt; &amp; to1, const Point3D&lt;double&gt; &amp; to2)'/>
<def f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.icc' l='67' ll='71' type='void HepGeom::Rotate3D::Rotate3D(const Point3D&lt;double&gt; &amp; fr1, const Point3D&lt;double&gt; &amp; fr2, const Point3D&lt;double&gt; &amp; to1, const Point3D&lt;double&gt; &amp; to2)'/>
<doc f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='400'>/**
     * Constructor for rotation given by original and rotated position of
     * two points. It is assumed that there is no reflection.
     * @param fr1 original position of 1st point
     * @param fr2 original position of 2nd point
     * @param to1 rotated position of 1st point
     * @param to2 rotated position of 2nd point
     */</doc>
