<dec f='codebrowser/source/geometry/solids/specific/include/G4TessellatedGeometryAlgorithms.hh' l='80' type='static G4bool G4TessellatedGeometryAlgorithms::IntersectLineAndTriangle2D(const G4TwoVector &amp; p, const G4TwoVector &amp; v, const G4TwoVector &amp; p0, const G4TwoVector &amp; e0, const G4TwoVector &amp; e1, G4TwoVector * location)'/>
<def f='codebrowser/source/geometry/solids/specific/src/G4TessellatedGeometryAlgorithms.cc' l='67' ll='149' type='static G4bool G4TessellatedGeometryAlgorithms::IntersectLineAndTriangle2D(const G4TwoVector &amp; p, const G4TwoVector &amp; v, const G4TwoVector &amp; p0, const G4TwoVector &amp; e0, const G4TwoVector &amp; e1, G4TwoVector * location)'/>
<doc f='codebrowser/source/geometry/solids/specific/src/G4TessellatedGeometryAlgorithms.cc' l='50'>///////////////////////////////////////////////////////////////////////////////
//
// IntersectLineAndTriangle2D
//
// Determines whether there is an intersection between a line defined
// by r = p + s.v and a triangle defined by verticies p0, p0+e0 and p0+e1.
//
// Here:
//        p = 2D vector
//        s = scaler on [0,infinity)
//        v = 2D vector
//        p0, e0 and e1 are 2D vectors
// Information about where the intersection occurs is returned in the
// variable location.
//
// This is based on the work of Rickard Holmberg.
//</doc>
