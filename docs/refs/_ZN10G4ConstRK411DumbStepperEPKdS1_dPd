<dec f='codebrowser/source/geometry/magneticfield/include/G4ConstRK4.hh' l='62' type='void G4ConstRK4::DumbStepper(const G4double * yIn, const G4double * dydx, G4double h, G4double * yOut)'/>
<inh f='codebrowser/source/geometry/magneticfield/include/G4MagErrorStepper.hh' l='65' c='_ZN17G4MagErrorStepper11DumbStepperEPKdS1_dPd'/>
<def f='codebrowser/source/geometry/magneticfield/src/G4ConstRK4.cc' l='91' ll='140' type='void G4ConstRK4::DumbStepper(const G4double * yIn, const G4double * dydx, G4double h, G4double * yOut)'/>
<use f='codebrowser/source/geometry/magneticfield/src/G4ConstRK4.cc' l='178' u='c' c='_ZN10G4ConstRK47StepperEPKdS1_dPdS2_'/>
<use f='codebrowser/source/geometry/magneticfield/src/G4ConstRK4.cc' l='180' u='c' c='_ZN10G4ConstRK47StepperEPKdS1_dPdS2_'/>
<use f='codebrowser/source/geometry/magneticfield/src/G4ConstRK4.cc' l='188' u='c' c='_ZN10G4ConstRK47StepperEPKdS1_dPdS2_'/>
<doc f='codebrowser/source/geometry/magneticfield/src/G4ConstRK4.cc' l='81'>//////////////////////////////////////////////////////////////////////
//
// Given values for the variables y[0,..,n-1] and their derivatives
// dydx[0,...,n-1] known at x, use the classical 4th Runge-Kutta
// method to advance the solution over an interval h and return the
// incremented variables as yout[0,...,n-1], which is not a distinct
// array from y. The user supplies the routine RightHandSide(x,y,dydx),
// which returns derivatives dydx at x. The source is routine rk4 from
// NRC p. 712-713 .</doc>
