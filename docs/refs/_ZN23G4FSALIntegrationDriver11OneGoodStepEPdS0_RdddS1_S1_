<dec f='codebrowser/source/geometry/magneticfield/include/G4FSALIntegrationDriver.hh' l='103' type='void G4FSALIntegrationDriver::OneGoodStep(G4double * y, G4double * dydx, G4double &amp; curveLength, G4double htry, G4double eps, G4double &amp; hdid, G4double &amp; hnext)'/>
<use f='codebrowser/source/geometry/magneticfield/include/G4FSALIntegrationDriver.icc' l='127' u='c' c='_ZN23G4FSALIntegrationDriver15AccurateAdvanceER12G4FieldTrackddd'/>
<def f='codebrowser/source/geometry/magneticfield/include/G4FSALIntegrationDriver.icc' l='166' ll='209' type='void G4FSALIntegrationDriver::OneGoodStep(G4double * y, G4double * dydx, G4double &amp; curveLength, G4double htry, G4double eps_rel_max, G4double &amp; hdid, G4double &amp; hnext)'/>
<doc f='codebrowser/source/geometry/magneticfield/include/G4FSALIntegrationDriver.hh' l='100'>// This takes one Step that is of size htry, or as large 
    // as possible while satisfying the accuracy criterion of:
    //     yerr &lt; eps * |y_end-y_start|</doc>
<doc f='codebrowser/source/geometry/magneticfield/include/G4FSALIntegrationDriver.hh' l='103'>// InOut</doc>
<doc f='codebrowser/source/geometry/magneticfield/include/G4FSALIntegrationDriver.icc' l='153'>// Driver for one Runge-Kutta Step with monitoring of local truncation error
// to ensure accuracy and adjust stepsize. Input are dependent variable
// array y[0,...,5] and its derivative dydx[0,...,5] at the
// starting value of the independent variable x . Also input are stepsize
// to be attempted htry, and the required accuracy eps. On output y and x
// are replaced by their new values, hdid is the stepsize that was actually
// accomplished, and hnext is the estimated next stepsize.
// This is similar to the function rkqs from the book:
// Numerical Recipes in C: The Art of Scientific Computing (NRC), Second
// Edition, by William H. Press, Saul A. Teukolsky, William T.
// Vetterling, and Brian P. Flannery (Cambridge University Press 1992),
// 16.2 Adaptive StepSize Control for Runge-Kutta, p. 719
//</doc>
