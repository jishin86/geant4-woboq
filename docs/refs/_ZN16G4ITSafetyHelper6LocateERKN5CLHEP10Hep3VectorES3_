<dec f='codebrowser/source/processes/electromagnetic/dna/management/include/G4ITSafetyHelper.hh' l='79' type='void G4ITSafetyHelper::Locate(const G4ThreeVector &amp; pGlobalPoint, const G4ThreeVector &amp; direction)'/>
<doc f='codebrowser/source/processes/electromagnetic/dna/management/include/G4ITSafetyHelper.hh' l='72'>//
  // Return safety for all geometries.
  //
  //  The 2nd argument is the radius of your interest (e.g. maximum displacement )
  //    Giving this you can reduce the average computational cost.
  //  If the second argument is not given, this is the real isotropic safety</doc>
<def f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITSafetyHelper.cc' l='183' ll='195' type='void G4ITSafetyHelper::Locate(const G4ThreeVector &amp; newPosition, const G4ThreeVector &amp; newDirection)'/>
