<dec f='codebrowser/source/geometry/solids/specific/include/G4TriangularFacet.hh' l='82' type='G4double G4TriangularFacet::Distance(const G4ThreeVector &amp; p, G4double minDist, const G4bool outgoing)'/>
<inh f='codebrowser/source/geometry/solids/specific/include/G4VFacet.hh' l='77' c='_ZN8G4VFacet8DistanceERKN5CLHEP10Hep3VectorEdb'/>
<def f='codebrowser/source/geometry/solids/specific/src/G4TriangularFacet.cc' l='486' ll='518' type='G4double G4TriangularFacet::Distance(const G4ThreeVector &amp; p, G4double minDist, const G4bool outgoing)'/>
<doc f='codebrowser/source/geometry/solids/specific/src/G4TriangularFacet.cc' l='471'>///////////////////////////////////////////////////////////////////////////////
//
// Distance (G4ThreeVector, G4double, G4bool)
//
// Determine the distance to point p.  kInfinity is returned if either:
// (1) outgoing is TRUE and the dot product of the normal vector to the facet
//     and the displacement vector from p to the triangle is negative.
// (2) outgoing is FALSE and the dot product of the normal vector to the facet
//     and the displacement vector from p to the triangle is positive.
// If approximate methods show the distance is to be greater than minDist, then
// forget about further computation and return fA very large number.
//
// This method has been heavily modified thanks to the valuable comments and 
// corrections of Rickard Holmberg.
//</doc>
