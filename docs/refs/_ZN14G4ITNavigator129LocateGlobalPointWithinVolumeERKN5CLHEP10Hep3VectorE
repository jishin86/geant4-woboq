<dec f='codebrowser/source/processes/electromagnetic/dna/management/include/G4ITNavigator1.hh' l='170' type='void G4ITNavigator1::LocateGlobalPointWithinVolume(const G4ThreeVector &amp; position)'/>
<def f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='590' ll='652' type='void G4ITNavigator1::LocateGlobalPointWithinVolume(const G4ThreeVector &amp; pGlobalpoint)'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='849' u='c' c='_ZN14G4ITNavigator111ComputeStepERKN5CLHEP10Hep3VectorES3_dRd'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='1725' u='c' c='_ZN14G4ITNavigator113ComputeSafetyERKN5CLHEP10Hep3VectorEdb'/>
<doc f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='577'>// ********************************************************************
// LocateGlobalPointWithinVolume
//
// -&gt; the state information of this Navigator and its subNavigators
//    is updated in order to start the next step at pGlobalpoint
// -&gt; no check is performed whether pGlobalpoint is inside the 
//    original volume (this must be the case).
//
// Note: a direction could be added to the arguments, to aid in future
//       optional checking (via the old code below, flagged by OLD_LOCATE). 
//       [ This would be done only in verbose mode ]
// ********************************************************************
//</doc>
<doc f='codebrowser/source/processes/electromagnetic/dna/management/include/G4ITNavigator1.hh' l='153'>// Search the geometrical hierarchy for the volumes deepest in the hierarchy
    // containing the point in the global coordinate space. Two main cases are:
    //  i) If pRelativeSearch=false it makes use of no previous/state
    //     information. Returns the physical volume containing the point, 
    //     with all previous mothers correctly set up.
    // ii) If pRelativeSearch is set to true, the search begin is the
    //     geometrical hierarchy at the location of the last located point,
    //     or the endpoint of the previous Step if SetGeometricallyLimitedStep()
    //     has been called immediately before.
    // The direction is used (to check if a volume is entered) if either
    //   - the argument ignoreDirection is false, or
    //   - the Navigator has determined that it is on an edge shared by two or
    //     more volumes.  (This is state information.)
    // 
    // Important Note: In order to call this the geometry MUST be closed.</doc>
