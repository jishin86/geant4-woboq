<dec f='codebrowser/source/analysis/hntools/include/G4P1ToolsManager.hh' l='85' type='G4int G4P1ToolsManager::CreateP1(const G4String &amp; name, const G4String &amp; title, G4int nbins, G4double xmin, G4double xmax, G4double ymin = 0, G4double ymax = 0, const G4String &amp; xunitName = &quot;none&quot;, const G4String &amp; yunitName = &quot;none&quot;, const G4String &amp; xfcnName = &quot;none&quot;, const G4String &amp; yfcnName = &quot;none&quot;, const G4String &amp; xbinScheme = &quot;linear&quot;)'/>
<doc f='codebrowser/source/analysis/hntools/include/G4P1ToolsManager.hh' l='80'>// Virtual functions from base class
    //

    // Methods to create profiles
    //</doc>
<inh f='codebrowser/source/analysis/management/include/G4VP1Manager.hh' l='57' c='_ZN12G4VP1Manager8CreateP1ERK8G4StringS2_iddddS2_S2_S2_S2_S2_'/>
<def f='codebrowser/source/analysis/hntools/src/G4P1ToolsManager.cc' l='253' ll='285' type='G4int G4P1ToolsManager::CreateP1(const G4String &amp; name, const G4String &amp; title, G4int nbins, G4double xmin, G4double xmax, G4double ymin = 0, G4double ymax = 0, const G4String &amp; xunitName = &quot;none&quot;, const G4String &amp; yunitName = &quot;none&quot;, const G4String &amp; xfcnName = &quot;none&quot;, const G4String &amp; yfcnName = &quot;none&quot;, const G4String &amp; xbinSchemeName = &quot;linear&quot;)'/>
<doc f='codebrowser/source/analysis/hntools/src/G4P1ToolsManager.cc' l='248'>// 
// protected methods
//

//_____________________________________________________________________________</doc>
