<dec f='codebrowser/source/processes/hadronic/models/particle_hp/include/G4ParticleHPFission.hh' l='65' type='G4int G4ParticleHPFission::GetVerboseLevel() const'/>
<def f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPFission.cc' l='175' ll='178' type='G4int G4ParticleHPFission::GetVerboseLevel() const'/>
<doc f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPFission.cc' l='158'>/*
void G4ParticleHPFission::addChannelForNewElement()
{
   for ( G4int i = numEle ; i &lt; (G4int)G4Element::GetNumberOfElements() ; i++ ) 
   {
      theFission.push_back( new G4ParticleHPChannel );
      if ( (*(G4Element::GetElementTable()))[i]-&gt;GetZ() &gt; 87 ) //TK modified for ENDF-VII
      {
         G4cout &lt;&lt; &quot;G4ParticleHPFission Prepairing Data for the new element of &quot; &lt;&lt; (*(G4Element::GetElementTable()))[i]-&gt;GetName() &lt;&lt; G4endl;
         (*theFission[i]).Init((*(G4Element::GetElementTable()))[i], dirName);
         (*theFission[i]).Register(&amp;theFS);
      }
   }
   numEle = (G4int)G4Element::GetNumberOfElements();
}
*/</doc>
