<dec f='codebrowser/source/geometry/solids/specific/include/G4VCSGfaceted.hh' l='67' type='EInside G4VCSGfaceted::Inside(const G4ThreeVector &amp; p) const'/>
<ovr f='codebrowser/source/geometry/solids/specific/src/G4GenericPolycone.cc' l='364' c='_ZNK17G4GenericPolycone6InsideERKN5CLHEP10Hep3VectorE'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4GenericPolycone.cc' l='374' u='c' c='_ZNK17G4GenericPolycone6InsideERKN5CLHEP10Hep3VectorE'/>
<ovr f='codebrowser/source/geometry/solids/specific/src/G4Polycone.cc' l='477' c='_ZNK10G4Polycone6InsideERKN5CLHEP10Hep3VectorE'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4Polycone.cc' l='487' u='c' c='_ZNK10G4Polycone6InsideERKN5CLHEP10Hep3VectorE'/>
<ovr f='codebrowser/source/geometry/solids/specific/src/G4Polyhedra.cc' l='527' c='_ZNK11G4Polyhedra6InsideERKN5CLHEP10Hep3VectorE'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4Polyhedra.cc' l='537' u='c' c='_ZNK11G4Polyhedra6InsideERKN5CLHEP10Hep3VectorE'/>
<inh f='codebrowser/source/geometry/management/include/G4VSolid.hh' l='121' c='_ZNK8G4VSolid6InsideERKN5CLHEP10Hep3VectorE'/>
<def f='codebrowser/source/geometry/solids/specific/src/G4VCSGfaceted.cc' l='218' ll='236' type='EInside G4VCSGfaceted::Inside(const G4ThreeVector &amp; p) const'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4VCSGfaceted.cc' l='373' u='c' c='_ZNK13G4VCSGfaceted13DistanceToOutERKN5CLHEP10Hep3VectorES3_bPbPS1_'/>
<doc f='codebrowser/source/geometry/solids/specific/src/G4VCSGfaceted.cc' l='210'>//
// Inside
//
// It could be a good idea to override this virtual
// member to add first a simple test (such as spherical
// test or whatnot) and to call this version only if
// the simplier test fails.
//</doc>
