<dec f='codebrowser/source/geometry/management/include/G4AffineTransform.hh' l='122' type='G4AffineTransform &amp; G4AffineTransform::InverseProduct(const G4AffineTransform &amp; tf1, const G4AffineTransform &amp; tf2)'/>
<def f='codebrowser/source/geometry/management/include/G4AffineTransform.icc' l='185' ll='232' type='G4AffineTransform &amp; G4AffineTransform::InverseProduct(const G4AffineTransform &amp; tf1, const G4AffineTransform &amp; tf2)'/>
<use f='codebrowser/source/geometry/volumes/include/G4NavigationLevelRep.icc' l='71' u='c' c='_ZN20G4NavigationLevelRepC1EP17G4VPhysicalVolumeRK17G4AffineTransformS4_7EVolumei'/>
<doc f='codebrowser/source/geometry/management/include/G4AffineTransform.hh' l='117'>// &apos;Products&apos; for avoiding (potential) temporaries:
    //            c.Product(a,b) equivalent to c=a*b
    //            c.InverseProduct(a*b,b ) equivalent to c=a
    // (Modifying) Sets self=tf1*tf2; Returns self reference</doc>
