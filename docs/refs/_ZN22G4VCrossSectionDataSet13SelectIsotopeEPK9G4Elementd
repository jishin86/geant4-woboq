<dec f='codebrowser/source/processes/hadronic/cross_sections/include/G4VCrossSectionDataSet.hh' l='132' type='const G4Isotope * G4VCrossSectionDataSet::SelectIsotope(const G4Element * , G4double kinEnergy)'/>
<doc f='codebrowser/source/processes/hadronic/cross_sections/include/G4VCrossSectionDataSet.hh' l='127'>//=====================================================================

  // Implement this method if needed
  // This method is called for element-wise cross section
  // Default implementation assumes equal cross sections for all isotopes </doc>
<ovr f='codebrowser/source/processes/hadronic/cross_sections/src/G4NeutronCaptureXS.cc' l='196' c='_ZN18G4NeutronCaptureXS13SelectIsotopeEPK9G4Elementd'/>
<ovr f='codebrowser/source/processes/hadronic/cross_sections/src/G4NeutronInelasticXS.cc' l='223' c='_ZN20G4NeutronInelasticXS13SelectIsotopeEPK9G4Elementd'/>
<ovr f='codebrowser/source/processes/hadronic/cross_sections/src/G4ParticleInelasticXS.cc' l='246' c='_ZN21G4ParticleInelasticXS13SelectIsotopeEPK9G4Elementd'/>
<def f='codebrowser/source/processes/hadronic/cross_sections/src/G4VCrossSectionDataSet.cc' l='150' ll='170' type='const G4Isotope * G4VCrossSectionDataSet::SelectIsotope(const G4Element * anElement, G4double )'/>
