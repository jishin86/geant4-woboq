<dec f='codebrowser/source/externals/clhep/include/CLHEP/Random/RandGeneral.h' l='76' type='void CLHEP::RandGeneral::~RandGeneral()'/>
<doc f='codebrowser/source/externals/clhep/include/CLHEP/Random/RandGeneral.h' l='53'>// These constructors should be used to instantiate a RandGeneral
  // distribution object defining a local engine for it.
  // The static generator will be skipped by using the non-static methods
  // defined below. In case no engine is specified in the constructor, the
  // default engine used by the static generator is applied.
  // If the engine is passed by pointer the corresponding engine object
  // will be deleted by the RandGeneral destructor.
  // If the engine is passed by reference the corresponding engine object
  // will not be deleted by the RandGeneral destructor.
  // The probability distribution function (Pdf) must be provided by the user
  // as an array of positive real number. The array size must also be
  // provided. The Pdf doesn&apos;t need to be normalized to 1. 
  // if IntType = 0 ( default value ) a uniform random number is
  // generated using the engine. The uniform number is then transformed
  // to the user&apos;s distribution using the cumulative probability
  // distribution constructed from his histogram. The cumulative
  // distribution is inverted using a binary search for the nearest
  // bin boundary and a linear interpolation within the
  // bin. RandGeneral therefore generates a constant density within
  // each bin.
  // if IntType = 1 no interpolation is performed and the result is a
  // discrete distribution.</doc>
<inh f='codebrowser/source/externals/clhep/include/CLHEP/Random/Random.h' l='63' c='_ZN5CLHEP9HepRandomD1Ev'/>
<def f='codebrowser/source/externals/clhep/src/RandGeneral.cc' l='171' ll='172' type='void CLHEP::RandGeneral::~RandGeneral()'/>
<doc f='codebrowser/source/externals/clhep/src/RandGeneral.cc' l='167'>//////////////////
//  Destructor
//////////////////</doc>
