<dec f='codebrowser/source/processes/electromagnetic/dna/management/include/G4ITNavigator1.hh' l='236' type='G4ThreeVector G4ITNavigator1::GetLocalExitNormalAndCheck(const G4ThreeVector &amp; point, G4bool * valid)'/>
<def f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='1553' ll='1579' type='G4ThreeVector G4ITNavigator1::GetLocalExitNormalAndCheck(const G4ThreeVector &amp; ExpectedBoundaryPointGlobal, G4bool * pValid)'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='1605' u='c' c='_ZN14G4ITNavigator119GetGlobalExitNormalERKN5CLHEP10Hep3VectorEPb'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='1653' u='c' c='_ZN14G4ITNavigator119GetGlobalExitNormalERKN5CLHEP10Hep3VectorEPb'/>
<doc f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='1545'>// ********************************************************************
// GetLocalExitNormalAndCheck
//
// Obtains the Normal vector to a surface (in local coordinates)
// pointing out of previous volume and into current volume, and
// checks the current point against expected &apos;local&apos; value.
// ********************************************************************
//</doc>
