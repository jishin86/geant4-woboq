<dec f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeChannelTables.hh' l='74' type='const G4CascadeChannel * G4CascadeChannelTables::FindTable(G4int initialState) const'/>
<use f='codebrowser/source/processes/hadronic/models/cascade/cascade/src/G4CascadeChannelTables.cc' l='153' u='c' c='_ZN22G4CascadeChannelTables8GetTableEi'/>
<def f='codebrowser/source/processes/hadronic/models/cascade/cascade/src/G4CascadeChannelTables.cc' l='165' ll='172' type='const G4CascadeChannel * G4CascadeChannelTables::FindTable(G4int initialState) const'/>
<doc f='codebrowser/source/processes/hadronic/models/cascade/cascade/src/G4CascadeChannelTables.cc' l='163'>// Return cross-section table requested by user</doc>
<doc f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeChannelTables.hh' l='73'>// Fetch table from map if already registered, or return null</doc>
