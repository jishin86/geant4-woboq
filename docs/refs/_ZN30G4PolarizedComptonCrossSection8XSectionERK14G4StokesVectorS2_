<dec f='codebrowser/source/processes/electromagnetic/polarisation/include/G4PolarizedComptonCrossSection.hh' l='79' type='G4double G4PolarizedComptonCrossSection::XSection(const G4StokesVector &amp; pol2, const G4StokesVector &amp; pol3)'/>
<inh f='codebrowser/source/processes/electromagnetic/polarisation/include/G4VPolarizedCrossSection.hh' l='59' c='_ZN24G4VPolarizedCrossSection8XSectionERK14G4StokesVectorS2_'/>
<def f='codebrowser/source/processes/electromagnetic/polarisation/src/G4PolarizedComptonCrossSection.cc' l='158' ll='180' type='G4double G4PolarizedComptonCrossSection::XSection(const G4StokesVector &amp; pol2, const G4StokesVector &amp; pol3)'/>
<doc f='codebrowser/source/processes/electromagnetic/polarisation/include/G4PolarizedComptonCrossSection.hh' l='74'>// returns the differential cross section for a given polarisation state
  // of the final state particles to be used in the calculation of the
  // polarization transfer
  // the calculation has to be initialised by calling Initialize()
  // prior to the first call of this function (see above)</doc>
