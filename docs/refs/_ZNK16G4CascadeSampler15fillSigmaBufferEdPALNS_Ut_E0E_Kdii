<dec f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeSampler.hh' l='66' type='void G4CascadeSampler::fillSigmaBuffer(G4double ke, const G4double (*)[energyBins] x, G4int startBin = 0, G4int stopBin = multBins) const'/>
<use f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeSampler.icc' l='55' u='c' c='_ZNK16G4CascadeSampler16findMultiplicityEdPALNS_Ut_E0E_Kd'/>
<use f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeSampler.icc' l='67' u='c' c='_ZNK16G4CascadeSampler19findFinalStateIndexEidPKiPALNS_Ut_E0E_Kd'/>
<def f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeSampler.icc' l='72' ll='83' type='void G4CascadeSampler::fillSigmaBuffer(G4double ke, const G4double (*)[energyBins] x, G4int startBin = 0, G4int stopBin = multBins) const'/>
<doc f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeSampler.hh' l='65'>// Optional start/stop arguments default to inclusive arrays</doc>
<doc f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeSampler.icc' l='71'>// Optional start/stop arguments default to multiplicity arrays</doc>
