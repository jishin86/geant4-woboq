<dec f='codebrowser/source/geometry/solids/specific/include/G4Paraboloid.hh' l='106' type='void G4Paraboloid::BoundingLimits(G4ThreeVector &amp; pMin, G4ThreeVector &amp; pMax) const'/>
<inh f='codebrowser/source/geometry/management/include/G4VSolid.hh' l='110' c='_ZNK8G4VSolid14BoundingLimitsERN5CLHEP10Hep3VectorES2_'/>
<def f='codebrowser/source/geometry/solids/specific/src/G4Paraboloid.cc' l='169' ll='188' type='void G4Paraboloid::BoundingLimits(G4ThreeVector &amp; pMin, G4ThreeVector &amp; pMax) const'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4Paraboloid.cc' l='203' u='c' c='_ZNK12G4Paraboloid15CalculateExtentE5EAxisRK13G4VoxelLimitsRK17G4AffineTransformRdS7_'/>
<doc f='codebrowser/source/geometry/solids/specific/src/G4Paraboloid.cc' l='153'>/////////////////////////////////////////////////////////////////////////
//
// Dispatch to parameterisation for replication mechanism dimension
// computation &amp; modification.

//void ComputeDimensions(       G4VPVParamerisation p,
//                        const G4Int               n,
//                        const G4VPhysicalVolume*  pRep )
//{
//  p-&gt;ComputeDimensions(*this,n,pRep) ;
//}

///////////////////////////////////////////////////////////////////////////////
//
// Get bounding box</doc>
<doc f='codebrowser/source/geometry/solids/specific/include/G4Paraboloid.hh' l='101'>// Solid standard methods

    //void ComputeDimensions(       G4VPVParamerisation p,
    //                        const G4Int               n,
    //                        const G4VPhysicalVolume*  pRep );</doc>
