<dec f='codebrowser/source/geometry/navigation/include/G4Navigator.hh' l='84' type='G4double G4Navigator::ComputeStep(const G4ThreeVector &amp; pGlobalPoint, const G4ThreeVector &amp; pDirection, const G4double pCurrentProposedStepLength, G4double &amp; pNewSafety)'/>
<doc f='codebrowser/source/geometry/navigation/include/G4Navigator.hh' l='82'>// Destructor. No actions.</doc>
<use f='codebrowser/source/geometry/navigation/include/G4VIntersectionLocator.icc' l='148' u='c' c='_ZN22G4VIntersectionLocator14IntersectChordERKN5CLHEP10Hep3VectorES3_RdS4_RS1_S4_S5_Pb'/>
<use f='codebrowser/source/event/src/G4AdjointPrimaryGenerator.cc' l='165' u='c' c='_ZN25G4AdjointPrimaryGenerator41ComputeAccumulatedDepthVectorAlongBackRayEN5CLHEP10Hep3VectorES1_dP20G4ParticleDefinition'/>
<use f='codebrowser/source/event/src/G4AdjointPrimaryGenerator.cc' l='195' u='c' c='_ZN25G4AdjointPrimaryGenerator41ComputeAccumulatedDepthVectorAlongBackRayEN5CLHEP10Hep3VectorES1_dP20G4ParticleDefinition'/>
<ovr f='codebrowser/source/geometry/navigation/src/G4ErrorPropagationNavigator.cc' l='60' c='_ZN27G4ErrorPropagationNavigator11ComputeStepERKN5CLHEP10Hep3VectorES3_dRd'/>
<ovr f='codebrowser/source/geometry/navigation/src/G4MultiNavigator.cc' l='93' c='_ZN16G4MultiNavigator11ComputeStepERKN5CLHEP10Hep3VectorES3_dRd'/>
<def f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='752' ll='1193' type='G4double G4Navigator::ComputeStep(const G4ThreeVector &amp; pGlobalpoint, const G4ThreeVector &amp; pDirection, const G4double pCurrentProposedStepLength, G4double &amp; pNewSafety)'/>
<use f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='1212' u='c' c='_ZN11G4Navigator13CheckNextStepERKN5CLHEP10Hep3VectorES3_dRd'/>
<doc f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='721'>// ********************************************************************
// ComputeStep
//
// Computes the next geometric Step: intersections with current
// mother and `daughter&apos; volumes.
//
// NOTE:
//
// Flags on entry:
// --------------
// fValidExitNormal  - Normal of exited volume is valid (convex, not a 
//                     coincident boundary)
// fExitNormal       - Surface normal of exited volume
// fExiting          - True if have exited solid
//
// fBlockedPhysicalVolume - Ptr to exited volume (or 0)
// fBlockedReplicaNo - Replication no of exited volume
// fLastStepWasZero  - True if last Step size was almost zero.
//
// Flags on exit:
// -------------
// fValidExitNormal  - True if surface normal of exited volume is valid
// fExitNormal       - Surface normal of exited volume rotated to mothers
//                    reference system
// fExiting          - True if exiting mother
// fEntering         - True if entering `daughter&apos; volume (or replica)
// fBlockedPhysicalVolume - Ptr to candidate (entered) volume
// fBlockedReplicaNo - Replication no of candidate (entered) volume
// fLastStepWasZero  - True if this Step size was almost zero.
// ********************************************************************
//</doc>
<use f='codebrowser/source/processes/transportation/src/G4Transportation.cc' l='299' u='c' c='_ZN16G4Transportation37AlongStepGetPhysicalInteractionLengthERK7G4TrackddRdP15G4GPILSelection'/>
