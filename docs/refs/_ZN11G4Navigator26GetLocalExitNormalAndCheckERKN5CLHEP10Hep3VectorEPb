<dec f='codebrowser/source/geometry/navigation/include/G4Navigator.hh' l='224' type='G4ThreeVector G4Navigator::GetLocalExitNormalAndCheck(const G4ThreeVector &amp; point, G4bool * valid)'/>
<ovr f='codebrowser/source/geometry/navigation/src/G4MultiNavigator.cc' l='829' c='_ZN16G4MultiNavigator26GetLocalExitNormalAndCheckERKN5CLHEP10Hep3VectorEPb'/>
<def f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='1544' ll='1570' type='G4ThreeVector G4Navigator::GetLocalExitNormalAndCheck(const G4ThreeVector &amp; , G4bool * pValid)'/>
<use f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='1644' u='c' c='_ZN11G4Navigator19GetGlobalExitNormalERKN5CLHEP10Hep3VectorEPb'/>
<use f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='1652' u='c' c='_ZN11G4Navigator19GetGlobalExitNormalERKN5CLHEP10Hep3VectorEPb'/>
<doc f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='1536'>// ********************************************************************
// GetLocalExitNormalAndCheck
//
// Obtains the Normal vector to a surface (in local coordinates)
// pointing out of previous volume and into current volume, and
// checks the current point against expected &apos;local&apos; value.
// ********************************************************************
//</doc>
