<dec f='codebrowser/source/processes/hadronic/models/particle_hp/include/G4ParticleHPCapture.hh' l='62' type='G4int G4ParticleHPCapture::GetVerboseLevel() const'/>
<def f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPCapture.cc' l='183' ll='186' type='G4int G4ParticleHPCapture::GetVerboseLevel() const'/>
<doc f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPCapture.cc' l='167'>/*
void G4ParticleHPCapture::addChannelForNewElement()
{
   G4ParticleHPCaptureFS* theFS = new G4ParticleHPCaptureFS;
   for ( G4int i = numEle ; i &lt; (G4int)G4Element::GetNumberOfElements() ; i++ ) 
   {
      G4cout &lt;&lt; &quot;G4ParticleHPCapture Prepairing Data for the new element of &quot; &lt;&lt; (*(G4Element::GetElementTable()))[i]-&gt;GetName() &lt;&lt; G4endl;
      theCapture.push_back( new G4ParticleHPChannel );
      (*theCapture[i]).Init((*(G4Element::GetElementTable()))[i], dirName);
      (*theCapture[i]).Register(theFS);
   }
   delete theFS;
   numEle = (G4int)G4Element::GetNumberOfElements();
}
*/</doc>
