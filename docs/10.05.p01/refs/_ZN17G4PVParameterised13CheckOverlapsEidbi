<dec f='codebrowser/source/geometry/volumes/include/G4PVParameterised.hh' l='99' type='G4bool G4PVParameterised::CheckOverlaps(G4int res = 1000, G4double tol = 0., G4bool verbose = true, G4int maxErr = 1)'/>
<doc f='codebrowser/source/geometry/volumes/include/G4PVParameterised.hh' l='97'>// Method sets code and can prepare for special type of regular volumes.</doc>
<use f='codebrowser/source/geometry/volumes/src/G4PVParameterised.cc' l='71' u='c' c='_ZN17G4PVParameterisedC1ERK8G4StringP15G4LogicalVolumeP17G4VPhysicalVolume5EAxisiP21G4VPVParameterisationb'/>
<use f='codebrowser/source/geometry/volumes/src/G4PVParameterised.cc' l='87' u='c' c='_ZN17G4PVParameterisedC1ERK8G4StringP15G4LogicalVolumeS4_5EAxisiP21G4VPVParameterisationb'/>
<inh f='codebrowser/source/geometry/management/include/G4VPhysicalVolume.hh' l='193' c='_ZN17G4VPhysicalVolume13CheckOverlapsEidbi'/>
<def f='codebrowser/source/geometry/volumes/src/G4PVParameterised.cc' l='152' ll='276' type='G4bool G4PVParameterised::CheckOverlaps(G4int res = 1000, G4double tol = 0., G4bool verbose = true, G4int maxErr = 1)'/>
<doc f='codebrowser/source/geometry/volumes/src/G4PVParameterised.cc' l='149'>// ----------------------------------------------------------------------
// CheckOverlaps
//</doc>
