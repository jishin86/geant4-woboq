<dec f='codebrowser/source/processes/electromagnetic/dna/management/include/G4ITNavigator2.hh' l='276' type='G4ThreeVector G4ITNavigator::GetLocalExitNormalAndCheck(const G4ThreeVector &amp; point, G4bool * valid)'/>
<ovr f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITMultiNavigator.cc' l='830' c='_ZN18G4ITMultiNavigator26GetLocalExitNormalAndCheckERKN5CLHEP10Hep3VectorEPb'/>
<def f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator2.cc' l='1701' ll='1728' type='G4ThreeVector G4ITNavigator::GetLocalExitNormalAndCheck(const G4ThreeVector &amp; , G4bool * pValid)'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator2.cc' l='1793' u='c' c='_ZN13G4ITNavigator19GetGlobalExitNormalERKN5CLHEP10Hep3VectorEPb'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator2.cc' l='1803' u='c' c='_ZN13G4ITNavigator19GetGlobalExitNormalERKN5CLHEP10Hep3VectorEPb'/>
<doc f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator2.cc' l='1693'>// ********************************************************************
// GetLocalExitNormalAndCheck
//
// Obtains the Normal vector to a surface (in local coordinates)
// pointing out of previous volume and into current volume, and
// checks the current point against expected &apos;local&apos; value.
// ********************************************************************
//</doc>
