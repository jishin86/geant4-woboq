<dec f='codebrowser/source/geometry/solids/specific/include/G4PolyhedraSide.hh' l='188' type='G4bool G4PolyhedraSide::IntersectSidePlane(const G4ThreeVector &amp; p, const G4ThreeVector &amp; v, const G4PolyhedraSideVec &amp; vec, G4double normSign, G4double surfTolerance, G4double &amp; distance, G4double &amp; distFromSurface)'/>
<def f='codebrowser/source/geometry/solids/specific/src/G4PolyhedraSide.cc' l='800' ll='885' type='G4bool G4PolyhedraSide::IntersectSidePlane(const G4ThreeVector &amp; p, const G4ThreeVector &amp; v, const G4PolyhedraSideVec &amp; vec, G4double normSign, G4double surfTolerance, G4double &amp; distance, G4double &amp; distFromSurface)'/>
<doc f='codebrowser/source/geometry/solids/specific/src/G4PolyhedraSide.cc' l='773'>//
// IntersectSidePlane
//
// Decide if a line correctly intersects one side plane of our segment.
// It is assumed that the correct side has been chosen, and thus only 
// the z bounds (of the entire segment) are checked.
//
// normSign - To be multiplied against normal:
//            = +1.0 normal is unchanged
//            = -1.0 normal is reversed (now points inward)
//
// Arguments:
//  p    - (in) Point
//  v    - (in) Direction
//  vec    - (in) Description record of the side plane
//  normSign  - (in) Sign (+/- 1) to apply to normal
//  surfTolerance  - (in) Surface tolerance (generally &gt; 0, see below)
//  distance  - (out) Distance along v to intersection
//  distFromSurface - (out) Distance from surface normal
//
// Notes:
//   surfTolerance  - Used to decide if a point is behind the surface,
//        a point is allow to be -surfTolerance behind the
//        surface (as measured along the normal), but *only*
//        if the point is within the r/z bounds + surfTolerance
//        of the segment.
//</doc>
