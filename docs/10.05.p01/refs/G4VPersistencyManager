<def f='codebrowser/source/run/include/G4VPersistencyManager.hh' l='51' ll='78'/>
<ovr f='codebrowser/source/persistency/mctruth/include/G4PersistencyManager.hh' l='114' c='G4PersistencyManager'/>
<size>8</size>
<doc f='codebrowser/source/run/include/G4VPersistencyManager.hh' l='38'>// class description:
//
//  This is an abstract base class for persistency management. The user&apos;s
// concrete class derived from this class must be a singleton. The user
// must construct the object of his/her concrete persistency manager at
// his/her main().
//  The virtual methods of Store() and Retreive() will be invoked from
// G4RunManager if the persistency manager exists.
//  Even if the user does not use any ODBMS, the user can use this class
// especially for Store() methods. Writing an ASCII file for storing
// event information can be delegated to this class, for example.
//</doc>
<fun r='_ZN21G4VPersistencyManager21GetPersistencyManagerEv'/>
<fun r='_ZN21G4VPersistencyManagerC1Ev'/>
<fun r='_ZN21G4VPersistencyManagerD1Ev'/>
<smbr r='G4VPersistencyManager::fPersistencyManager' t='G4VPersistencyManager *'/>
<fun r='_ZN21G4VPersistencyManager5StoreEPK7G4Event'/>
<fun r='_ZN21G4VPersistencyManager5StoreEPK5G4Run'/>
<fun r='_ZN21G4VPersistencyManager5StoreEPK17G4VPhysicalVolume'/>
<fun r='_ZN21G4VPersistencyManager8RetrieveERP7G4Event'/>
<fun r='_ZN21G4VPersistencyManager8RetrieveERP5G4Run'/>
<fun r='_ZN21G4VPersistencyManager8RetrieveERP17G4VPhysicalVolume'/>
