<dec f='codebrowser/source/geometry/management/include/G4VoxelLimits.hh' l='114' type='G4int G4VoxelLimits::OutCode(const G4ThreeVector &amp; pVec) const'/>
<doc f='codebrowser/source/geometry/management/include/G4VoxelLimits.hh' l='112'>// Return true if the specified vector is inside/on boundaries of limits.</doc>
<use f='codebrowser/source/geometry/management/src/G4VoxelLimits.cc' l='110' u='c' c='_ZNK13G4VoxelLimits12ClipToLimitsERN5CLHEP10Hep3VectorES2_'/>
<use f='codebrowser/source/geometry/management/src/G4VoxelLimits.cc' l='111' u='c' c='_ZNK13G4VoxelLimits12ClipToLimitsERN5CLHEP10Hep3VectorES2_'/>
<use f='codebrowser/source/geometry/management/src/G4VoxelLimits.cc' l='240' u='c' c='_ZNK13G4VoxelLimits12ClipToLimitsERN5CLHEP10Hep3VectorES2_'/>
<use f='codebrowser/source/geometry/management/src/G4VoxelLimits.cc' l='241' u='c' c='_ZNK13G4VoxelLimits12ClipToLimitsERN5CLHEP10Hep3VectorES2_'/>
<def f='codebrowser/source/geometry/management/src/G4VoxelLimits.cc' l='261' ll='281' type='G4int G4VoxelLimits::OutCode(const G4ThreeVector &amp; pVec) const'/>
<doc f='codebrowser/source/geometry/management/src/G4VoxelLimits.cc' l='249'>////////////////////////////////////////////////////////////////////////////
//
// Calculate the `outcode&apos; for the specified vector:
// The following bits are set:
//   0      pVec.x()&lt;fxAxisMin &amp;&amp; IsXLimited()
//   1      pVec.x()&gt;fxAxisMax &amp;&amp; IsXLimited()
//   2      pVec.y()&lt;fyAxisMin &amp;&amp; IsYLimited()
//   3      pVec.y()&gt;fyAxisMax &amp;&amp; IsYLimited()
//   4      pVec.z()&lt;fzAxisMin &amp;&amp; IsZLimited()
//   5      pVec.z()&gt;fzAxisMax &amp;&amp; IsZLimited()
//</doc>
