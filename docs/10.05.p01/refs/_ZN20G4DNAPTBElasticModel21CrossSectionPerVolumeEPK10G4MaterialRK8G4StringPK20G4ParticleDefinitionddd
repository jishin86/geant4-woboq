<dec f='codebrowser/source/processes/electromagnetic/dna/models/include/G4DNAPTBElasticModel.hh' l='91' type='G4double G4DNAPTBElasticModel::CrossSectionPerVolume(const G4Material * material, const G4String &amp; materialName, const G4ParticleDefinition * p, G4double ekin, G4double emin, G4double emax)'/>
<def f='codebrowser/source/processes/electromagnetic/dna/models/src/G4DNAPTBElasticModel.cc' l='295' ll='342' type='G4double G4DNAPTBElasticModel::CrossSectionPerVolume(const G4Material * , const G4String &amp; materialName, const G4ParticleDefinition * p, G4double ekin, G4double , G4double )'/>
<doc f='codebrowser/source/processes/electromagnetic/dna/models/src/G4DNAPTBElasticModel.cc' l='293'>//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....</doc>
<doc f='codebrowser/source/processes/electromagnetic/dna/models/src/G4DNAPTBElasticModel.cc' l='295'>/*material*/</doc>
<doc f='codebrowser/source/processes/electromagnetic/dna/models/include/G4DNAPTBElasticModel.hh' l='78'>/*!
     * \brief CrossSectionPerVolume
     * This method is mandatory for any model class. It finds and return the cross section value
     * for the current material, particle and energy values.
     * The number of molecule per volume is not used here but in the G4DNAModelInterface class.
     * \param material
     * \param materialName
     * \param p
     * \param ekin
     * \param emin
     * \param emax
     * \return the cross section value
     */</doc>
