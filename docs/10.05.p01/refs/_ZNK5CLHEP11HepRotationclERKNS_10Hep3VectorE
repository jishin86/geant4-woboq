<dec f='codebrowser/source/externals/clhep/include/CLHEP/Vector/Rotation.h' l='300' type='CLHEP::Hep3Vector CLHEP::HepRotation::operator()(const CLHEP::Hep3Vector &amp; p) const'/>
<def f='codebrowser/source/externals/clhep/include/CLHEP/Vector/Rotation.icc' l='190' ll='197' type='CLHEP::Hep3Vector CLHEP::HepRotation::operator()(const CLHEP::Hep3Vector &amp; p) const'/>
<use f='codebrowser/source/externals/clhep/include/CLHEP/Vector/Rotation.icc' l='201' u='c' c='_ZNK5CLHEP11HepRotationclERKNS_16HepLorentzVectorE'/>
<doc f='codebrowser/source/externals/clhep/include/CLHEP/Vector/Rotation.h' l='291'>// non-const but logically moot correction for accumulated roundoff errors
	// rectify averages the matrix with the transpose of its actual
	// inverse (absent accumulated roundoff errors, the transpose IS
	// the inverse)); this removes to first order those errors.
	// Then it formally extracts axis and delta, and forms a true
	// HepRotation with those values of axis and delta.

  // ---------- Application:</doc>
<use f='codebrowser/source/processes/solidstate/channeling/src/G4Channeling.cc' l='82' u='c' c='_ZN12G4Channeling12PosToLatticeEP11G4StepPointRN5CLHEP10Hep3VectorE'/>
<use f='codebrowser/source/processes/solidstate/channeling/src/G4Channeling.cc' l='113' u='c' c='_ZN12G4Channeling16UpdateParametersERK7G4Track'/>
<use f='codebrowser/source/processes/solidstate/channeling/src/G4Channeling.cc' l='128' u='c' c='_ZN12G4Channeling16UpdateParametersERK7G4Track'/>
<use f='codebrowser/source/processes/solidstate/channeling/src/G4Channeling.cc' l='368' u='c' c='_ZN12G4Channeling12PostStepDoItERK7G4TrackRK6G4Step'/>
<use f='codebrowser/source/processes/solidstate/channeling/src/G4Channeling.cc' l='383' u='c' c='_ZN12G4Channeling12PostStepDoItERK7G4TrackRK6G4Step'/>
