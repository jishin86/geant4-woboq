<dec f='codebrowser/source/geometry/solids/specific/include/G4TessellatedSolid.hh' l='234' type='G4double G4TessellatedSolid::DistanceToInNoVoxels(const G4ThreeVector &amp; p, const G4ThreeVector &amp; v, G4double aPstep = kInfinity) const'/>
<def f='codebrowser/source/geometry/solids/specific/src/G4TessellatedSolid.cc' l='1078' ll='1140' type='G4double G4TessellatedSolid::DistanceToInNoVoxels(const G4ThreeVector &amp; p, const G4ThreeVector &amp; v, G4double  = kInfinity) const'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4TessellatedSolid.cc' l='1422' u='c' c='_ZNK18G4TessellatedSolid16DistanceToInCoreERKN5CLHEP10Hep3VectorES3_d'/>
<doc f='codebrowser/source/geometry/solids/specific/src/G4TessellatedSolid.cc' l='1068'>///////////////////////////////////////////////////////////////////////////////
//
// G4double DistanceToIn(const G4ThreeVector&amp; p, const G4ThreeVector&amp; v)
//
// Return the distance along the normalised vector v to the shape,
// from the point at offset p. If there is no intersection, return
// kInfinity. The first intersection resulting from &apos;leaving&apos; a
// surface/volume is discarded. Hence, this is tolerant of points on
// surface of shape.
//</doc>
