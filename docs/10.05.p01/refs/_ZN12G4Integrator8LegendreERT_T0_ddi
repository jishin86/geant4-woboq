<dec f='codebrowser/source/global/HEPNumerics/include/G4Integrator.hh' l='70' type='G4double G4Integrator::Legendre(T &amp; typeT, F f, G4double a, G4double b, G4int n)'/>
<def f='codebrowser/source/global/HEPNumerics/include/G4Integrator.icc' l='319' ll='379' type='G4double G4Integrator::Legendre(T &amp; typeT, F f, G4double a, G4double b, G4int nLegendre)'/>
<doc f='codebrowser/source/global/HEPNumerics/include/G4Integrator.hh' l='65'>// Adaptive Gauss method


  // Integration methods involving orthogohol polynomials</doc>
<doc f='codebrowser/source/global/HEPNumerics/include/G4Integrator.icc' l='297'>////////////////////////////////////////////////////////////////////////////
// Gauss integration methods involving ortogonal polynomials
////////////////////////////////////////////////////////////////////////////
//
// Methods involving Legendre polynomials  
//
/////////////////////////////////////////////////////////////////////////
//
// The value nLegendre set the accuracy required, i.e the number of points
// where the function pFunction will be evaluated during integration.
// The function creates the arrays for abscissas and weights that used 
// in Gauss-Legendre quadrature method. 
// The values a and b are the limits of integration of the function  f .
// nLegendre MUST BE EVEN !!!
// Returns the integral of the function f between a and b, by 2*fNumber point 
// Gauss-Legendre integration: the function is evaluated exactly
// 2*fNumber times at interior points in the range of integration. 
// Since the weights and abscissas are, in this case, symmetric around 
// the midpoint of the range of integration, there are actually only 
// fNumber distinct values of each.
// Convenient for using with some class object dataT</doc>
