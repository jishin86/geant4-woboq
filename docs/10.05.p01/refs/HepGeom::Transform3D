<def f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='170' ll='355'/>
<ovr f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='373' c='HepGeom::Rotate3D'/>
<ovr f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='514' c='HepGeom::Translate3D'/>
<ovr f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='621' c='HepGeom::Reflect3D'/>
<ovr f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='724' c='HepGeom::Scale3D'/>
<size>96</size>
<doc f='codebrowser/source/externals/clhep/include/CLHEP/Geometry/Transform3D.h' l='134'>/**
   * Class for transformation of 3D geometrical objects.
   * It allows different translations, rotations, scalings and reflections.
   * Several specialized classes are derived from it:
   *
   * TranslateX3D, TranslateY3D, TranslateZ3D, Translate3D,&lt;br&gt;
   * RotateX3D,    RotateY3D,    RotateZ3D,    Rotate3D,   &lt;br&gt;
   * ScaleX3D,     ScaleY3D,     ScaleZ3D,     Scale3D,    &lt;br&gt;
   * ReflectX3D,   ReflectY3D,   ReflectZ3D,   Reflect3D.
   *
   * The idea behind these classes is to provide some additional constructors
   * for Transform3D, they normally should not be used as separate classes.
   *
   * Example:
   * @code
   *   HepGeom::Transform3D m;
   *   m = HepGeom::TranslateX3D(10.*cm);
   * @endcode
   *
   * Remark:
   * For the reason that the operator* is left associative, the notation
   * @code
   *   v2 = m3*(m2*(m1*v1));
   * @endcode
   * is much more effective then the notation
   * @code
   *   v2 = m3*m2*m1*v1;
   * @endcode
   * In the first case three operations Transform3D*Vector3D are executed,
   * in the second case two operations Transform3D*Transform3D and one
   * Transform3D*Vector3D are performed. Transform3D*Transform3D is
   * roughly three times slower than Transform3D*Vector3D.
   *
   * @author &lt;Evgueni.Tcherniaev@cern.ch&gt;
   * @ingroup geometry
   */</doc>
<mbr r='HepGeom::Transform3D::xx_' o='0' t='double'/>
<mbr r='HepGeom::Transform3D::xy_' o='64' t='double'/>
<mbr r='HepGeom::Transform3D::xz_' o='128' t='double'/>
<mbr r='HepGeom::Transform3D::dx_' o='192' t='double'/>
<mbr r='HepGeom::Transform3D::yx_' o='256' t='double'/>
<mbr r='HepGeom::Transform3D::yy_' o='320' t='double'/>
<mbr r='HepGeom::Transform3D::yz_' o='384' t='double'/>
<mbr r='HepGeom::Transform3D::dy_' o='448' t='double'/>
<mbr r='HepGeom::Transform3D::zx_' o='512' t='double'/>
<mbr r='HepGeom::Transform3D::zy_' o='576' t='double'/>
<mbr r='HepGeom::Transform3D::zz_' o='640' t='double'/>
<mbr r='HepGeom::Transform3D::dz_' o='704' t='double'/>
<fun r='_ZN7HepGeom11Transform3DC1Edddddddddddd'/>
<fun r='_ZN7HepGeom11Transform3D12setTransformEdddddddddddd'/>
<smbr r='HepGeom::Transform3D::Identity' t='const HepGeom::Transform3D'/>
<fun r='_ZN7HepGeom11Transform3DC1Ev'/>
<fun r='_ZN7HepGeom11Transform3DC1ERKN5CLHEP11HepRotationERKNS1_10Hep3VectorE'/>
<fun r='_ZN7HepGeom11Transform3DC1ERKNS_7Point3DIdEES4_S4_S4_S4_S4_'/>
<fun r='_ZN7HepGeom11Transform3DC1ERKS0_'/>
<fun r='_ZN7HepGeom11Transform3DD1Ev'/>
<fun r='_ZNK7HepGeom11Transform3DixEi'/>
<fun r='_ZNK7HepGeom11Transform3DclEii'/>
<fun r='_ZNK7HepGeom11Transform3D2xxEv'/>
<fun r='_ZNK7HepGeom11Transform3D2xyEv'/>
<fun r='_ZNK7HepGeom11Transform3D2xzEv'/>
<fun r='_ZNK7HepGeom11Transform3D2yxEv'/>
<fun r='_ZNK7HepGeom11Transform3D2yyEv'/>
<fun r='_ZNK7HepGeom11Transform3D2yzEv'/>
<fun r='_ZNK7HepGeom11Transform3D2zxEv'/>
<fun r='_ZNK7HepGeom11Transform3D2zyEv'/>
<fun r='_ZNK7HepGeom11Transform3D2zzEv'/>
<fun r='_ZNK7HepGeom11Transform3D2dxEv'/>
<fun r='_ZNK7HepGeom11Transform3D2dyEv'/>
<fun r='_ZNK7HepGeom11Transform3D2dzEv'/>
<fun r='_ZN7HepGeom11Transform3DaSERKS0_'/>
<fun r='_ZN7HepGeom11Transform3D11setIdentityEv'/>
<fun r='_ZNK7HepGeom11Transform3D7inverseEv'/>
<fun r='_ZNK7HepGeom11Transform3DmlERKS0_'/>
<fun r='_ZNK7HepGeom11Transform3D16getDecompositionERNS_7Scale3DERNS_8Rotate3DERNS_11Translate3DE'/>
<fun r='_ZNK7HepGeom11Transform3D6isNearERKS0_d'/>
<fun r='_ZNK7HepGeom11Transform3D11getRotationEv'/>
<fun r='_ZNK7HepGeom11Transform3D14getTranslationEv'/>
<fun r='_ZNK7HepGeom11Transform3DeqERKS0_'/>
<fun r='_ZNK7HepGeom11Transform3DneERKS0_'/>
<fun r='_ZNK7HepGeom11Transform3DixEi'/>
<fun r='_ZN7HepGeom11Transform3DC1ERKN5CLHEP11HepRotationERKNS1_10Hep3VectorE'/>
<fun r='_ZNK7HepGeom11Transform3D11getRotationEv'/>
<fun r='_ZNK7HepGeom11Transform3D14getTranslationEv'/>
