<def f='codebrowser/source/particles/management/include/G4PDefManager.hh' l='86' ll='120'/>
<size>1</size>
<doc f='codebrowser/source/particles/management/include/G4PDefManager.hh' l='66'>// The type G4PDefManager is introduced to encapsulate the methods used by
// both the master thread and worker threads to allocate memory space for
// the fields encapsulated by the class G4PDefData. When each thread
// changes the value for these fields, it refers to them using a macro
// definition defined below. For every G4ParticleDefinition instance,
// there is a corresponding G4PDefData instance. All G4PDefData instances
// are organized by the class G4PDefManager as an array.
// The field &quot;int g4particleDefinitionInstanceID&quot; is added to the class G4ParticleDefinition.
// The value of this field in each G4ParticleDefinition instance is the
// subscript of the corresponding G4PDefData instance.
// In order to use the class G4PDefManager, we add a static member in the class
// G4ParticleDefinition as follows: &quot;static G4PDefManager subInstanceManager&quot;.
// Both the master thread and worker threads change the length of the array
// for G4PDefData instances mutually along with G4ParticleDefinition
// instances are created. For each worker thread, it dynamically creates ions.
// Consider any thread A, if there is any other thread which creates an ion.
// This ion is shared by the thread A. So the thread A leaves an empty space
// in the array of G4PDefData instances for the ion.
//</doc>
<fun r='_ZN13G4PDefManagerC1Ev'/>
<fun r='_ZN13G4PDefManager17CreateSubInstanceEv'/>
<fun r='_ZN13G4PDefManager15NewSubInstancesEv'/>
<fun r='_ZN13G4PDefManager9FreeSlaveEv'/>
<fun r='_ZN13G4PDefManager9GetOffsetEv'/>
<fun r='_ZN13G4PDefManager11UseWorkAreaEP10G4PDefData'/>
<fun r='_ZN13G4PDefManager12FreeWorkAreaEv'/>
<fun r='_ZN13G4PDefManager15slavetotalspaceEv'/>
<fun r='_ZN13G4PDefManager6offsetEv'/>
<mbr r='G4PDefManager::totalobj' t='G4int'/>
<mbr r='G4PDefManager::mutex' t='int'/>
