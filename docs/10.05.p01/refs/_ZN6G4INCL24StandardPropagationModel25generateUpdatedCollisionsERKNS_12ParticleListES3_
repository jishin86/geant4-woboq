<dec f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/include/G4INCLStandardPropagationModel.hh' l='138' type='void G4INCL::StandardPropagationModel::generateUpdatedCollisions(const G4INCL::ParticleList &amp; updatedParticles, const G4INCL::ParticleList &amp; particles)'/>
<doc f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/include/G4INCLStandardPropagationModel.hh' l='125'>/** \brief Generate and register collisions between a list of updated particles and all the other particles.
       *
       * This method does not generate collisions among the particles in
       * updatedParticles; in other words, it generates a collision between one
       * of the updatedParticles and one of the particles ONLY IF the latter
       * does not belong to updatedParticles.
       *
       * If you intend to generate all possible collisions among particles in a
       * list, use generateCollisions().
       *
       * \param updatedParticles list of updated particles
       * \param particles list of particles
       */</doc>
<def f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/src/G4INCLStandardPropagationModel.cc' l='378' ll='395' type='void G4INCL::StandardPropagationModel::generateUpdatedCollisions(const G4INCL::ParticleList &amp; updatedParticles, const G4INCL::ParticleList &amp; particles)'/>
<use f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/src/G4INCLStandardPropagationModel.cc' l='434' u='c' c='_ZN6G4INCL24StandardPropagationModel13updateAvatarsERKNS_12ParticleListE'/>
