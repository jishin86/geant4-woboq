<dec f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeCheckBalance.hh' l='88' type='void G4CascadeCheckBalance::collide(const G4Fragment &amp; fragment, G4CollisionOutput &amp; output)'/>
<def f='codebrowser/source/processes/hadronic/models/cascade/cascade/src/G4CascadeCheckBalance.cc' l='141' ll='180' type='void G4CascadeCheckBalance::collide(const G4Fragment &amp; fragment, G4CollisionOutput &amp; output)'/>
<doc f='codebrowser/source/processes/hadronic/models/cascade/cascade/src/G4CascadeCheckBalance.cc' l='140'>// For de-excitation, take G4Fragment as initial state</doc>
<doc f='codebrowser/source/processes/hadronic/models/cascade/cascade/include/G4CascadeCheckBalance.hh' l='87'>// This is for use with G4VCascadeDeexcitation modules</doc>
<use f='codebrowser/source/processes/hadronic/models/cascade/cascade/src/G4CascadeColliderBase.cc' l='147' u='c' c='_ZN21G4CascadeColliderBase14validateOutputERK10G4FragmentR17G4CollisionOutput'/>
<use f='codebrowser/source/processes/hadronic/models/cascade/cascade/src/G4CascadeDeexciteBase.cc' l='138' u='c' c='_ZN21G4CascadeDeexciteBase14validateOutputERK10G4FragmentR17G4CollisionOutput'/>
