<dec f='codebrowser/source/processes/electromagnetic/dna/models/include/G4DNAPTBIonisationModel.hh' l='95' type='G4double G4DNAPTBIonisationModel::CrossSectionPerVolume(const G4Material * material, const G4String &amp; materialName, const G4ParticleDefinition * p, G4double ekin, G4double emin, G4double emax)'/>
<def f='codebrowser/source/processes/electromagnetic/dna/models/src/G4DNAPTBIonisationModel.cc' l='250' ll='291' type='G4double G4DNAPTBIonisationModel::CrossSectionPerVolume(const G4Material * , const G4String &amp; materialName, const G4ParticleDefinition * p, G4double ekin, G4double , G4double )'/>
<doc f='codebrowser/source/processes/electromagnetic/dna/models/src/G4DNAPTBIonisationModel.cc' l='248'>//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo....</doc>
<doc f='codebrowser/source/processes/electromagnetic/dna/models/src/G4DNAPTBIonisationModel.cc' l='250'>/*material*/</doc>
<doc f='codebrowser/source/processes/electromagnetic/dna/models/include/G4DNAPTBIonisationModel.hh' l='83'>/*!
     * \brief CrossSectionPerVolume
     * Mandatory for every model the CrossSectionPerVolume method is in charge of returning the
     * cross section value corresponding to the material, particle and energy current values.
     * \param material
     * \param materialName
     * \param p
     * \param ekin
     * \param emin
     * \param emax
     * \return the cross section value
     */</doc>
