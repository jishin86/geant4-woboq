<dec f='codebrowser/source/processes/hadronic/models/qmd/include/G4QMDReaction.hh' l='110' type='void G4QMDReaction::calcOffSetOfCollision(G4double , const G4ParticleDefinition * , const G4ParticleDefinition * , G4double , G4double , G4double , G4ThreeVector )'/>
<doc f='codebrowser/source/processes/hadronic/models/qmd/include/G4QMDReaction.hh' l='104'>//      G4VPreCompoundModel* preco; 


      //                            b        pd_proj                pd_targ                  z_p     a_p     z_t     a_t      plab       elab
//      G4double offSetOfCollision( G4double , G4ParticleDefinition* , G4ParticleDefinition* , G4int , G4int , G4int , G4int , G4double , G4double  );  
      //                           b          pd_proj                 pd_targ                 plab       elab      bmax boostToCM</doc>
<use f='codebrowser/source/processes/hadronic/models/qmd/src/G4QMDReaction.cc' l='205' u='c' c='_ZN13G4QMDReaction13ApplyYourselfERK15G4HadProjectileR9G4Nucleus'/>
<def f='codebrowser/source/processes/hadronic/models/qmd/src/G4QMDReaction.cc' l='661' ll='802' type='void G4QMDReaction::calcOffSetOfCollision(G4double b, const G4ParticleDefinition * pd_proj, const G4ParticleDefinition * pd_targ, G4double ptot, G4double etot, G4double bmax, G4ThreeVector boostToCM)'/>
