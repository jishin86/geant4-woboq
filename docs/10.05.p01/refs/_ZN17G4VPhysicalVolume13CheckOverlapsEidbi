<dec f='codebrowser/source/geometry/management/include/G4VPhysicalVolume.hh' l='193' type='G4bool G4VPhysicalVolume::CheckOverlaps(G4int res = 1000, G4double tol = 0., G4bool verbose = true, G4int errMax = 1)'/>
<doc f='codebrowser/source/geometry/management/include/G4VPhysicalVolume.hh' l='189'>// Returns non-zero code in case the underlying volume structure 
      //  is regular, voxel-like.  Value is id for structure type.
      //  If non-zero the volume is a candidate for specialised 
      //  navigation such as &apos;nearest neighbour&apos; directly on volumes.</doc>
<def f='codebrowser/source/geometry/management/src/G4VPhysicalVolume.cc' l='209' ll='212' type='G4bool G4VPhysicalVolume::CheckOverlaps(G4int  = 1000, G4double  = 0., G4bool  = true, G4int  = 1)'/>
<doc f='codebrowser/source/geometry/management/src/G4VPhysicalVolume.cc' l='206'>// Only implemented for placed and parameterised volumes.
// Not required for replicas.
//</doc>
<use f='codebrowser/source/geometry/navigation/src/G4GeomTestVolume.cc' l='144' u='c' c='_ZN16G4GeomTestVolume20TestRecursiveOverlapEii'/>
<use f='codebrowser/source/geometry/navigation/src/G4Navigator.cc' l='1044' u='c' c='_ZN11G4Navigator11ComputeStepERKN5CLHEP10Hep3VectorES3_dRd'/>
<ovr f='codebrowser/source/geometry/volumes/src/G4PVParameterised.cc' l='153' c='_ZN17G4PVParameterised13CheckOverlapsEidbi'/>
<ovr f='codebrowser/source/geometry/volumes/src/G4PVPlacement.cc' l='235' c='_ZN13G4PVPlacement13CheckOverlapsEidbi'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator1.cc' l='1072' u='c' c='_ZN14G4ITNavigator111ComputeStepERKN5CLHEP10Hep3VectorES3_dRd'/>
<use f='codebrowser/source/processes/electromagnetic/dna/management/src/G4ITNavigator2.cc' l='1199' u='c' c='_ZN13G4ITNavigator11ComputeStepERKN5CLHEP10Hep3VectorES3_dRd'/>
<use f='codebrowser/source/visualization/modeling/src/G4LogicalVolumeModel.cc' l='205' u='c' c='_ZN20G4LogicalVolumeModel18DescribeYourselfToER16G4VGraphicsScene'/>
