<dec f='codebrowser/source/geometry/solids/specific/include/G4Tet.hh' l='70' type='void G4Tet::G4Tet(const G4String &amp; pName, G4ThreeVector anchor, G4ThreeVector p2, G4ThreeVector p3, G4ThreeVector p4, G4bool * degeneracyFlag = 0)'/>
<def f='codebrowser/source/geometry/solids/specific/src/G4Tet.cc' l='97' ll='190' type='void G4Tet::G4Tet(const G4String &amp; pName, G4ThreeVector anchor, G4ThreeVector p2, G4ThreeVector p3, G4ThreeVector p4, G4bool * degeneracyFlag = 0)'/>
<use f='codebrowser/source/geometry/solids/specific/src/G4Tet.cc' l='282' u='c' c='_ZN5G4Tet15CheckDegeneracyEN5CLHEP10Hep3VectorES1_S1_S1_'/>
<doc f='codebrowser/source/geometry/solids/specific/src/G4Tet.cc' l='88'>////////////////////////////////////////////////////////////////////////
//
// Constructor - create a tetrahedron
// This class is implemented separately from general polyhedra,
// because the simplex geometry can be computed very quickly,
// which may become important in situations imported from mesh generators,
// in which a very large number of G4Tets are created.
// A Tet has all of its geometrical information precomputed</doc>
