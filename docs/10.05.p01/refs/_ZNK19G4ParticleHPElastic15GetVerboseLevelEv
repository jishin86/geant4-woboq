<dec f='codebrowser/source/processes/hadronic/models/particle_hp/include/G4ParticleHPElastic.hh' l='66' type='G4int G4ParticleHPElastic::GetVerboseLevel() const'/>
<def f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPElastic.cc' l='175' ll='178' type='G4int G4ParticleHPElastic::GetVerboseLevel() const'/>
<doc f='codebrowser/source/processes/hadronic/models/particle_hp/src/G4ParticleHPElastic.cc' l='159'>/*
void G4ParticleHPElastic::addChannelForNewElement()
{
   G4ParticleHPElasticFS* theFS = new G4ParticleHPElasticFS;
   for ( G4int i = numEle ; i &lt; (G4int)G4Element::GetNumberOfElements() ; i++ ) 
   {
      G4cout &lt;&lt; &quot;G4ParticleHPElastic Prepairing Data for the new element of &quot; &lt;&lt; (*(G4Element::GetElementTable()))[i]-&gt;GetName() &lt;&lt; G4endl;
      theElastic.push_back( new G4ParticleHPChannel );
      (*theElastic[i]).Init((*(G4Element::GetElementTable()))[i], dirName);
      while(!(*theElastic[i]).Register(theFS)) ;
   }
   delete theFS;
   numEle = (G4int)G4Element::GetNumberOfElements();
}
*/</doc>
