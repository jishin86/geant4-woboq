<dec f='codebrowser/source/processes/hadronic/models/inclxx/utils/include/G4INCLIntersection.hh' l='78' type='G4INCL::Intersection G4INCL::IntersectionFactory::getEarlierTrajectoryIntersection(const G4INCL::ThreeVector &amp; x0, const G4INCL::ThreeVector &amp; p, const G4double r)'/>
<def f='codebrowser/source/processes/hadronic/models/inclxx/utils/include/G4INCLIntersection.hh' l='124' ll='126' type='G4INCL::Intersection G4INCL::IntersectionFactory::getEarlierTrajectoryIntersection(const G4INCL::ThreeVector &amp; x0, const G4INCL::ThreeVector &amp; p, const G4double r)'/>
<doc f='codebrowser/source/processes/hadronic/models/inclxx/utils/include/G4INCLIntersection.hh' l='68'>/** \brief Compute the first intersection of a straight particle
     *         trajectory with a sphere.
     *
     * \param x0 the starting position of the trajectory
     * \param p the trajectory direction
     * \param r the radius of the sphere (centred in the origin)
     * \return an Intersection. The G4bool is true if an intersection exists,
     *         in which case its position is stored in the ThreeVector and
     *         its time in the G4double.
     */</doc>
<use f='codebrowser/source/processes/hadronic/models/inclxx/incl_physics/src/G4INCLCoulombNone.cc' l='51' u='c' c='_ZNK6G4INCL11CoulombNone14bringToSurfaceEPNS_8ParticleEPNS_7NucleusE'/>
