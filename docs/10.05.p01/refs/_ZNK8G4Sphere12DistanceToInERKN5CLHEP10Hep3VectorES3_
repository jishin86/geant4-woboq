<dec f='codebrowser/source/geometry/solids/CSG/include/G4Sphere.hh' l='148' type='G4double G4Sphere::DistanceToIn(const G4ThreeVector &amp; p, const G4ThreeVector &amp; v) const'/>
<inh f='codebrowser/source/geometry/management/include/G4VSolid.hh' l='130' c='_ZNK8G4VSolid12DistanceToInERKN5CLHEP10Hep3VectorES3_'/>
<def f='codebrowser/source/geometry/solids/CSG/src/G4Sphere.cc' l='725' ll='1664' type='G4double G4Sphere::DistanceToIn(const G4ThreeVector &amp; p, const G4ThreeVector &amp; v) const'/>
<use f='codebrowser/source/geometry/solids/CSG/src/G4Sphere.cc' l='826' u='c' c='_ZNK8G4Sphere12DistanceToInERKN5CLHEP10Hep3VectorES3_'/>
<doc f='codebrowser/source/geometry/solids/CSG/src/G4Sphere.cc' l='696'>///////////////////////////////////////////////////////////////////////////////
//
// Calculate distance to shape from outside, along normalised vector
// - return kInfinity if no intersection, or intersection distance &lt;= tolerance
//
// -&gt; If point is outside outer radius, compute intersection with rmax
//        - if no intersection return
//        - if  valid phi,theta return intersection Dist
//
// -&gt; If shell, compute intersection with inner radius, taking largest +ve root
//        - if valid phi,theta, save intersection
//
// -&gt; If phi segmented, compute intersection with phi half planes
//        - if valid intersection(r,theta), return smallest intersection of
//          inner shell &amp; phi intersection
//
// -&gt; If theta segmented, compute intersection with theta cones
//        - if valid intersection(r,phi), return smallest intersection of
//          inner shell &amp; theta intersection
//
//
// NOTE:
// - `if valid&apos; (above) implies tolerant checking of intersection points
//
// OPT:
// Move tolIO/ORmin/RMax2 precalcs to where they are needed -
// not required for most cases.
// Avoid atan2 for non theta cut G4Sphere.</doc>
