<dec f='codebrowser/source/geometry/volumes/include/G4PVPlacement.hh' l='160' type='static G4RotationMatrix * G4PVPlacement::NewPtrRotMatrix(const G4RotationMatrix &amp; RotMat)'/>
<use f='codebrowser/source/geometry/volumes/src/G4PVPlacement.cc' l='77' u='c' c='_ZN13G4PVPlacementC1ERKN7HepGeom11Transform3DERK8G4StringP15G4LogicalVolumeP17G4VPhysicalVolumebib'/>
<use f='codebrowser/source/geometry/volumes/src/G4PVPlacement.cc' l='139' u='c' c='_ZN13G4PVPlacementC1ERKN7HepGeom11Transform3DEP15G4LogicalVolumeRK8G4StringS5_bib'/>
<def f='codebrowser/source/geometry/volumes/src/G4PVPlacement.cc' l='392' ll='407' type='static G4RotationMatrix * G4PVPlacement::NewPtrRotMatrix(const G4RotationMatrix &amp; RotMat)'/>
<doc f='codebrowser/source/geometry/volumes/src/G4PVPlacement.cc' l='382'>// ----------------------------------------------------------------------
// NewPtrRotMatrix
//
// Auxiliary function for 2nd &amp; 4th constructors (those with G4Transform3D)
// Creates a new rotation matrix on the heap (using &quot;new&quot;) and copies its
// argument into it.
//
// NOTE: Ownership of the returned pointer is left to the caller !
//       No entity is currently responsible to delete this memory. 
//</doc>
